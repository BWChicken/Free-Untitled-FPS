--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==4) then function v24()local v38=253 -(163 + 90);local v39;local v40;while true do if (v38==(1 + 0)) then return (( -((2189 -(129 + 1040)) -(522 + 496)) * v20(v40,32)) + 1) * ((2 + 0)^(v20(v40,1991 -((330 -(54 + 121)) + 1815),31) -(1014 + 9))) * ((((v20(v40,1549 -(443 + 1105),24 -4) * ((3 -1)^32)) + v39)/((1 + (2 -1))^(74 -22))) + ((1058 -(550 + 507)) -(1994 -(474 + 1520))));end if (v38==0) then v39=v23();v40=v23();v38=1 + 0;end end end v25=nil;function v25(v30)local v41;if  not v30 then local v66=67 -(12 + (84 -(21 + 8)));while true do if (v66==(0 + 0)) then v30=v23();if (v30==(0 + 0)) then return "";end break;end end end v41=v3(v15,v18,(v18 + v30) -(113 -(91 + 21)));v18=v18 + v30;local v42={};for v64=1, #v41 do v42[v64]=v2(v1(v3(v41,v64,v64)));end return v6(v42);end v17=5;end if (3==v17) then v23=nil;function v23()local v43,v44,v45,v46=v1(v15,v18,v18 + (13 -(36 -26)));v18=v18 + (1686 -(1417 + 268)) + 3;return (v46 * (42463305 -25686089)) + (v45 * 65536) + (v44 * (1992 -(664 + 1072))) + v43;end v24=nil;v17=4;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v31)if (v1(v31,2)==79) then local v67=0;while true do if (v67==0) then v19=v0(v3(v31,1,1));return "";end end else local v68=0;local v69;while true do if (v68==0) then v69=v2(v0(v31,16));if v19 then local v82=0;local v83;while true do if (v82==0) then v83=v5(v69,v19);v19=nil;v82=1;end if (v82==1) then return v83;end end else return v69;end break;end end end end);v17=1;end if (5==v17) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==7) then function v29(v32,v33,v34)local v47=0;local v48;local v49;local v50;while true do if (0==v47) then v48=v32[1];v49=v32[2];v47=1;end if (v47==1) then v50=v32[3];return function(...)local v77=1;local v78= -1;local v79={...};local v80=v11("#",...) -1;local function v81()local v84=v48;local v85=Const;local v86=v49;local v87=v50;local v88=v27;local v89={};local v90={};local v91={};for v96=0 -0,v80 do if (((1859 + 236)<(4887 -(580 + 245 + 169))) and (v96>=v87)) then v89[v96-v87]=v79[v96 + (1944 -(1663 + 280))];else v91[v96]=v79[v96 + (1 -0)];end end local v92=(v80-v87) + (1007 -(293 + 713));local v93;local v94;while true do local v97=1350 -(1322 + 28);local v98;local v99;while true do if ((v97==(889 -(86 + 803))) or ((1172 + 132)<=(2501 -(832 + 691)))) then v98=0 + 0;v99=nil;v97=1 -0;end if ((v97==1) or ((1559 + 195)<((591 + 637) -(752 + 337)))) then while true do if ((v98==(0 -0)) or ((1230 -644)>=((4567 -(1220 + 415)) -((2457 -(983 + 938)) + (989 -573))))) then v99=0 -(0 + 0);while true do if (((524 + 2604 + 569)<(6168 -(661 + 1226))) and ((521 -(422 + 98))==v99)) then if ((v94<=(8 + 13)) or ((11228 -(8447 -(1148 + 776)))<(455 + 139 + 539))) then if (((3013 -(674 + 829))<=(6565 -3280)) and (v94<=(6 + 4 + 0))) then if (((159 + 2500)>(1101 -243)) and (v94<=(1040 -(1030 + 6 + 0)))) then if ((v94<=((1863 -(857 + 1002)) -3)) or ((2779 -(55 + 986))==170)) then if ((v94>(0 -0)) or ((211 + 74 + 50)>(3026 + 14))) then if ((v91[v93[1 + 1]]==v91[v93[8 -4]]) or ((2319 -1730)>=((1179 -(258 + 610)) + 811))) then v77=v77 + (2 -(1 + 0));else v77=v93[3 + 0];end else local v126=1929 -(1651 + 278);local v127;while true do if ((v126==(0 + 0 + 0)) or ((3600 -(182 + 1684))>=(498 + 4443))) then v127=v91[v93[1109 -(332 + 750 + 1 + 22)]];if (((8887 -5821)<=(3184 + 1117)) and  not v127) then InstrPoint=InstrPoint + (3 -2);else local v237=0 -0;local v238;while true do if ((v237==0) or ((2372 + 1323)==((5305 + 2381) -4968))) then v238=0 + 0;while true do if ((v238==(0 + 0)) or ((2045 -(1229 + 2 + 272))<=(764 -((185 -42) + 409)))) then v91[v93[121 -(91 + 10 + 18)]]=v127;InstrPoint=v93[8 -5];break;end end break;end end end break;end end end elseif ((((7181 -(1063 + 287)) -(84 + 1665))<=(4164 + 173)) and (v94<=(2 + 0))) then v91[v93[(1007 -(608 + 393)) -4]]=v29(v86[v93[8 -(1 + 4)]],nil,v34);elseif ((v94==(590 -(144 + 443))) or ((20 + 10 + 68)>(1814 + 1607))) then v91[v93[5 -3]][v93[4 -(530 -(179 + 350))]]=v93[3 + 1];else local v184=1207 -(225 + 982);local v185;local v186;local v187;local v188;while true do if ((v184==(0 + 0)) or (((5513 -(58 + 327)) -(59 + 301))>(427 + 4565))) then local v239=0 + 0;while true do if ((v239==(50 -(6 + 44))) or ((211 + 144 + 278)>(6497 -1584))) then v185=1276 -(554 + 722);v186=nil;v239=392 -((257 -138) + 115 + 157);end if ((v239==((303 + 82) -(227 + 157))) or (((9131 -6716) + 1658)<(203 + (4913 -3303)))) then v184=(1064 -(655 + 408)) + 0;break;end end end if (((637 + (2030 -(841 + 984)))<=(1148 + 242)) and (v184==(1825 -((3449 -2241) + 616)))) then local v240=1704 -(924 + 37 + 743);while true do if (((4786 -2399)==(898 + 1489)) and (v240==((386 + 894) -(96 + 1184)))) then v187=nil;v188=nil;v240=250 -(70 + 179);end if (((4759 -(1185 + 694))>88) and (v240==(1 + 0))) then v184=1 + 1;break;end end end if ((v184==(1 + 1)) or ((503 + 1205 + 1870)<(3029 -(38 + 238)))) then while true do if ((v185==(2 -1)) or ((2435 + 1973)<(2505 -(166 + 838)))) then v188=0 -0;for v278=v186,v93[2 + 2 + 0] do local v279=0 + 0;while true do if (((4392 -(313 + (1969 -(362 + 97))))>=1641) and (v279==(0 -(0 + 0)))) then v188=v188 + (589 -(160 + 428));v91[v278]=v187[v188];break;end end end break;end if ((((5727 -4258) -(306 + 72))>(2134 -(1362 + 78))) and (v185==0)) then local v267=0 -0;local v268;while true do if ((((14038 -8294) -(401 + 913 + 557))>=(169 + 875)) and (v267==(0 -(0 + 0)))) then v268=(2006 -(260 + 72)) -((531 -289) + (3055 -(1333 + 290)));while true do if ((v268==(1349 -(456 + 892))) or ((189 + 406)==(2827 -(39 + 1928)))) then v185=1 + 0 + 0;break;end if (((9982 -6474)==(6379 -2871)) and (v268==((449 + 590) -(140 + 716 + 46 + 137)))) then v186=v93[(2 + 3) -3];v187={v91[v186](v91[v186 + 1 + 0])};v268=(1 -0) -(0 + 0);end end break;end end end end break;end end end elseif ((((26048 -12189) -(25376 -16421))>(5226 -(591 + (638 -(142 + 222))))) and (v94<=(5 + 2))) then if ((v94<=(2 + 3 + 0)) or ((49 + 1126)>=(3536 -(586 + 277)))) then v33[v93[3 + 0]]=v91[v93[2 + 0]];elseif (((265 + 1058)<(496 + 3682)) and (v94>(6 + 0))) then if ((v91[v93[1201 -(1165 + (805 -(199 + 572)))]]==v93[11 -7]) or ((1493 + 1108)>(5853 -(296 + 1220)))) then v77=v77 + (1 -0);else v77=v93[(4683 -3034) -(939 + 707)];end else v91[v93[1103 -(765 + 336)]]= not v91[v93[3]];end elseif (((124 + 1291)<(4779 -(47 + 719))) and (v94<=((2500 -901) -(10 + 301 + 1280)))) then local v130=0 + 0;local v131;local v132;local v133;local v134;while true do if ((v130==(1617 -(1534 + 81))) or ((3576 + 37)<=(2381 -(748 + (1407 -(511 + 107)))))) then for v231=v131,v78 do local v232=0 -0;local v233;local v234;while true do if ((v232==0) or ((3404 -1472)==(3091 -(142 + 207)))) then v233=51 -(41 + (18 -8));v234=nil;v232=269 -(113 + 13 + 142);end if (((1463 -(630 + (1590 -(205 + 553))))==v232) or ((15 + 2593)<(85 + 2522))) then while true do if ((v233==(0 + 0)) or ((1082 + 3350)>4610)) then v234=0 -0;while true do if (((1649 + 2176)>(4582 -3093)) and ((0 + 0)==v234)) then v134=v134 + ((1178 -(1155 + 22)) -0);v91[v231]=v132[v134];break;end end break;end end break;end end end break;end if (((2048 + 2833)==(10809 -5928)) and (v130==(0 + 0))) then v131=v93[878 -(7 + 0 + (2098 -(718 + 511)))];v132,v133=v88(v91[v131](v12(v91,v131 + 1,v78)));v130=(1121 -709) -(377 + 34);end if ((v130==1) or ((260 + 1002 + 2391)<(4241 -(931 + 242)))) then v78=(v133 + v131) -(1 + 0);v134=0 -(0 -0);v130=1720 -(53 + 1665);end end elseif (((2776 -(1315 + 442))<=(522 + 2035)) and (v94==9)) then v91[v93[1111 -(863 + 246)]]();else local v190=469 -((366 -(19 + 271)) + 393);local v191;local v192;while true do if ((v190==(0 -0)) or ((499 + 708)==(863 -(1154 -779)))) then v191=1465 -(60 + 1405);v192=nil;v190=(3061 -(1245 + 308)) -(1006 + 501);end if ((v190==(1 -0)) or ((3270 + 436)<(4159 -(401 + 398)))) then while true do if ((((8172 -3427) -3535)==(1668 -(35 + 423))) and (v191==(0 -0))) then v192=v93[1967 -((2697 -(1560 + 252)) + (5149 -4069))];v91[v192]=v91[v192](v12(v91,v192 + (3 -2),v93[7 -4]));break;end end break;end end end elseif ((v94<=(3 + 12)) or (4373<=(2525 -((3061 -1300) + 176)))) then if ((v94<=((256 -(97 + 158)) + 11)) or ((94 + 75)>3024)) then if ((((2652 -(92 + 66)) -(1222 + 446 + 201))<((12304 + 228) -9165)) and (v94==(26 -15))) then local v135=0 -0;local v136;local v137;while true do if ((((8711 -5020) -((228 -146) + 373))==(4809 -(1256 + 317))) and (v135==(1 + 0))) then while true do if (((2897 + 216)<=(5509 -(15 + 1358))) and (v136==(0 -0))) then v137=v93[4 -2];v91[v137]=v91[v137](v12(v91,v137 + (3 -2),v78));break;end end break;end if (((390 + 0)>(1147 -((885 -313) + 539))) and (v135==(0 -0))) then v136=1519 -(43 + 64 + 1412);v137=nil;v135=1 -(949 -(480 + 469));end end else do return v91[v93[2 -0]];end end elseif (((8717 -5643)<(5170 -(957 + 258))) and (v94<=(3 + 10))) then local v138=898 -(49 + 849);local v139;local v140;local v141;local v142;local v143;while true do if ((v138==(1421 -(512 + 909))) or ((237 + 125 + 1269)>=(10668 -7445))) then v139=100 -(44 + (949 -(850 + 43)));v140=nil;v138=1 + 0 + 0;end if (((2695 + (2981 -(525 + 1090)))>=(254 -(104 + 135))) and (v138==2)) then v143=nil;while true do if ((v139==(761 -((2177 -1580) + 162))) or ((5755 -((2366 -1476) + 222))<=(13666 -9474))) then for v252=v140,v78 do local v253=1011 -(6 + 1005);local v254;local v255;while true do if ((v253==(0 -0)) or ((1118 + (3467 -(85 + 171)))<=(273 + 85 + 261))) then v254=825 -(446 + 379);v255=nil;v253=3 -2;end if (((4254 -1586)<=(2852 + 1567)) and (v253==(1947 -(741 + (2208 -(14 + 989)))))) then while true do if (((1870 -652)<(17788 -13861)) and (v254==(0 -0))) then v255=0 + (1660 -(1390 + 270));while true do if (((3463 -2591)<(2496 -1424)) and (v255==(0 -0))) then v143=v143 + (4 -3);v91[v252]=v141[v143];break;end end break;end end break;end end end break;end if (((4297 -(918 + 491 + 543))<=(5610 -(1284 + 233))) and (v139==(4 -3))) then local v244=0 -0;while true do if ((v244==0) or ((82 + 98)>(1112 + 1053))) then v78=(v142 + v140) -((3 + 1) -(1 + 2));v143=526 -(489 + (2001 -(570 + 1394)));v244=1174 -(627 + (1773 -1227));end if (((6580 -(887 + 775))>(353 + 4387)) and (v244==(3 -2))) then v139=2 + 0;break;end end end if (((1991 -(488 + 537))>(390 -108)) and ((0 -(0 -0))==v139)) then v140=v93[683 -(274 + 407)];v141,v142=v88(v91[v140](v91[v140 + 1 + 0]));v139=1 + (1346 -(425 + 921));end end break;end if (((5016 -(339 + 1298))>(596 -342)) and (v138==(18 -(12 + 5)))) then v141=nil;v142=nil;v138=2 -0;end end elseif ((((18177 -13259) -1570)>(608 + 1478)) and (v94==(46 -32))) then v91[v93[2 + 0 + 0]]={};else v91[v93[1 + 1]]=v91[v93[(7 -2) -2]] -v91[v93[1 + 1 + 2]];end elseif ((v94<=(3 + 15)) or ((3439 -(341 + 240))>(5955 -((2067 -(368 + 1212)) + 619)))) then if ((v94<=(1814 -(290 + 1508))) or ((567 + 80)<=(110 + 59 + 25))) then v91[v93[7 -5]]=v91[v93[11 -8]][v93[4 + 0 + 0]];elseif ((v94>(5 + 12)) or ((18320 -14020)==((4228 + 2204) -2930))) then local v195=0 + 0 + 0;local v196;local v197;while true do if ((v195==(0 -(0 -0))) or ((1146 + 356)>=(3734 + 29))) then v196=0;v197=nil;v195=727 -(685 + 41);end if (((12989 -8017)==(6100 -(167 + 961))) and (v195==(1 + (1365 -(725 + 640))))) then while true do if ((v196==(0 + 0)) or ((12547 -8974)>(4212 + 183 + 20))) then v197=v93[2];v91[v197]=v91[v197](v91[v197 + (1 -0)]);break;end end break;end end else local v198=1845 -(1296 + 549);local v199;local v200;while true do if ((v198==0) or ((760 + 343)<(1719 -812))) then local v241=0 + 0;while true do if (((5183 -(7 + 251))>(2237 -(407 + 6))) and (v241==(0 -0))) then v199=0 -0;v200=nil;v241=2 -(1 + 0);end if (((7482 -3481)==(10297 -6296)) and (v241==(1 + 0))) then v198=1 + (914 -(380 + 534));break;end end end if ((((11442 -8985) -(180 + 286))>(177 + 301)) and (v198==(1 + (1851 -(877 + 974))))) then while true do if (((1745 -(58 + (3304 -(1095 + 522))))==v199) or ((7120 -4233)==(2366 -(331 + 61)))) then v200=v93[2];v91[v200]=v91[v200]();break;end end break;end end end elseif ((v94<=(13 + (13 -7))) or ((3388 -1101)<=(115 + 931))) then local v145=(494 -(358 + 136)) -0;local v146;local v147;local v148;local v149;while true do if (((17483 -12941)>(6751 -2796)) and (v145==(961 -(811 + 149)))) then v148=nil;v149=nil;v145=2;end if (((110 -82)<(6139 -4564)) and (v145==(0 -0))) then v146=269 -(30 + (1980 -(923 + 818)));v147=nil;v145=1 + 0;end if (((2 + 0)==v145) or (((1092 -(329 + 48)) -289)>(2310 -(791 + 316)))) then while true do if (((1895 -((3086 -(720 + 1159)) + 687))==v146) or ((168 + 643)>=(3698 -(110 + 244)))) then v149=1670 -((1919 -782) + 533);for v256=v147,v93[691 -(128 + 83 + 476)] do local v257=266 -(124 + 142);local v258;local v259;while true do if (((1547 -(861 + (797 -595)))<=((21357 -15322) -2644)) and (v257==(0 + (893 -(566 + 327))))) then v258=0 + 0;v259=nil;v257=1;end if (((1233 + 1210)<(6786 -(539 + 1407))) and (v257==(1 -0))) then while true do if ((v258==(1201 -(1071 + 130))) or ((5433 -(1243 + 354))==(3526 -(606 + 1224)))) then v259=0 + (531 -(405 + 126));while true do if (((475 + 246)<=(803 + 3885)) and (v259==(0 -0))) then v149=v149 + (1 -0);v91[v256]=v148[v149];break;end end break;end end break;end end end break;end if ((v146==(0 + 0)) or ((1980 -(44 + 292))==((3000 + 1450) -(793 + 456)))) then v147=v93[1 + 1];v148={v91[v147](v12(v91,v147 + (2 -(3 -2)),v93[(1459 -(188 + 1270)) + 2]))};v146=(2030 -725) -(1204 + 100);end end break;end end elseif ((v94>(3 + 17)) or ((2584 -(562 + 493))>=(3823 -((755 -519) + 1172)))) then v91[v93[2 -0]]=v91[v93[3 + 0]];elseif ((v91[v93[1 + 1]]~=v93[3 + 1]) or ((2299 -(1133 + (1211 -698)))>(4440 -(103 + 33)))) then v77=v77 + (1308 -(1261 + 46)) + 0;else v77=v93[(1109 + 55) -(445 + 263 + 453)];end elseif (((12623 -9502)>(2720 -1699)) and (v94<=(55 -(351 -(260 + 68))))) then if ((v94<=(801 -((228 -124) + 671))) or ((1860 -1399)<=(714 -(602 + 67)))) then if ((v94<=(10 + 13)) or (((4303 -(1049 + 70)) + 172)>(4776 -((2815 -1838) + 185)))) then if (((2272 + 2209)>(751 -(822 -255))) and (v94>(76 -(126 -72)))) then v91[v93[1 + 1]]=v91[v93[768 -(396 + 369)]] -v93[(426 -(246 + 179)) + 3];else local v151=0 -0;local v152;local v153;local v154;while true do if (((1324 + 1475)>=((1307 -(32 + 711)) + (1275 -(559 + 190)))) and (v151==(0 + 0))) then v152=0 + (0 -0);v153=nil;v151=2 -(194 -(40 + 153));end if ((v151==((1 + 19) -(8 + (40 -29)))) or ((9990 -6736)<(358 + 985 + (2007 -(174 + 158))))) then v154=nil;while true do if (((8890 -6922)>=(1156 -(201 + 12))) and (v152==(0 -0))) then local v245=0 + 0;while true do if (((4549 -(822 + 611))>=(4380 -2823)) and (v245==(0 -(0 -0)))) then v153=985 -(48 + 755 + 182);v154=nil;v245=382 -(147 + 234);end if (((2673 -((3912 -3086) + 371 + 30))<((207 -104) + 1770)) and (v245==(2 -1))) then v152=778 -(376 + 401);break;end end end if (((2847 -(483 + (1972 -(1285 + 531))))==(2317 -(22 + 87))) and (v152==((72 -(48 + 22)) -1))) then while true do if ((v153==(1795 -(655 + (3093 -1953)))) or ((4880 -3109)>(2267 + 1078))) then v154=v93[638 -(489 + 94 + 53)];v91[v154](v12(v91,v154 + (180 -(123 + 56)),v93[3 + 0]));break;end end break;end end break;end end end elseif ((v94<=(13 + 11)) or ((2953 + 729)<2977)) then v91[v93[2]][v93[5 -(2 + 0)]]=v91[v93[4 + 0]];elseif ((v94>(9 + (501 -(143 + 342)))) or ((482 -279)>(3292 -(1784 + 117)))) then local v202=0 -(385 -(85 + 300));local v203;local v204;local v205;while true do if ((v202==(3 -2)) or ((82 + 2805 + 893)>=(7773 -3237))) then v205=nil;while true do if ((v203==(0 + 0 + (0 -0))) or ((3192 + 252)<=(105 -46))) then local v272=332 -(304 + 28);while true do if (((0 + 0 + 0)==v272) or ((3025 -1209)<(209 + (937 -(414 + 268))))) then v204=(1752 -(241 + 1457)) -(41 + 13);v205=nil;v272=80 -(35 + 44);end if (((2653 -1616)==(2952 -(1138 + 777))) and (((267 -(183 + 81)) -2)==v272)) then v203=2 -1;break;end end end if ((v203==(1 -(0 + 0))) or (((258 + 2919) -(502 + 543))<(2419 -(548 + 650)))) then while true do if ((v204==(0 + 0 + 0)) or ((914 -(6 + (704 -(643 + 2))))>(1852 -((894 -(270 + 178)) + 365)))) then v205=v93[5 -(3 + 0)];v91[v205](v91[v205 + 1]);break;end end break;end end break;end if ((v202==0) or ((2101 -(696 + 107))>(1300 + 3640))) then v203=46 -(20 + (1700 -(199 + 1475)));v204=nil;v202=1 + 0;end end else v77=v93[1157 -((494 -133) + 793)];end elseif ((v94<=29) or ((2829 -((498 -290) + 18))>(4836 -(195 + 20)))) then if (((1 + 126)<=(5250 -(782 + (448 -249)))) and (v94<=((14 -9) + 22))) then local v156=0 -0;local v157;local v158;local v159;local v160;local v161;local v162;local v163;while true do if ((v156==(0 -0)) or ((4182 -(990 + 960))<=2020)) then v157=0 -(590 -(42 + 548));v158=nil;v156=1;end if (((222 + 2970)<=(5742 -(820 + 132))) and (v156==(734 -(558 + 173)))) then v163=nil;while true do if (((6206 -1897)<=4873) and (v157==(343 -(36 + 305)))) then v162=nil;v163=nil;v157=1 + 1 + 1;end if ((v157==(1350 -(781 + 569))) or ((6558 -2282)<=856)) then v158=0 + (0 -0);v159=nil;v157=1;end if (((1616 + 69)<((1223 + 4832) -3668)) and (v157==(983 -(490 + 490)))) then while true do if (((8986 -(14826 -9676))>=((3632 -(1674 + 112)) -(322 + 402))) and ((0 + (1465 -(688 + 777)))==v158)) then local v280=235 -(25 + 210);local v281;while true do if ((v280==(873 -(58 + (2378 -(373 + 1190))))) or ((744 + 636)>=(9208 -4949))) then v281=0 + (0 -0);while true do if ((v281==(1597 -(86 + 1511))) or (2814==4162)) then local v323=0 -0;while true do if (((1899 -1332)==((2205 -(97 + 258)) -(383 + 900))) and (v323==(663 -(439 + 223)))) then v281=2 -1;break;end if ((v323==(0 + 0)) or ((2281 -((1816 -(1001 + 313)) + 1282))>=(1358 -(534 + 4)))) then v159=v93[1 + 1];v160=v93[541 -(336 + 201)];v323=1497 -(435 + 239 + 822);end end end if ((v281==(237 -((691 -(224 + 237)) + 5 + 1))) or ((9823 -7394)>(2928 + 861))) then v158=(332 + 218) -(273 + 276);break;end end break;end end end if ((4553==(330 + 4223)) and (v158==(410 -((804 -462) + 65)))) then if (v163 or ((2066 -1262)==(750 + 513))) then local v299=0 -0;local v300;while true do if (((1097 + 1403)>(2089 -(2988 -1457))) and (v299==(0 -0))) then v300=221 -(188 + 33);while true do if ((((7047 -(878 + 921)) -2262)<=(5906 -2653)) and (v300==(0 + 0))) then v91[v161]=v163;v77=v93[3];break;end end break;end end else v77=v77 + (821 -((1142 -(850 + 184)) + 712));end break;end if ((v158==(1139 -(142 + (2953 -(106 + 1851))))) or ((8325 -(908 + 3499))<(22 + 87))) then local v282=0 + 0;local v283;while true do if (((7783 -6196)<(4499 -(7 + 516))) and (v282==0)) then v283=(516 + 360) -(734 + 142);while true do if ((2001<=(4674 -(912 + 202))) and (v283==((1054 -(711 + 342)) -(1246 -(191 + 1055))))) then v158=2 + 0;break;end if ((v283==(0 + 0)) or ((2143 -(1150 + 602))>=(2772 -1242))) then v161=v159 + (219 -(132 + 85));v162={v91[v159](v91[v159 + ((2299 -(1165 + 448)) -(448 + 237))],v91[v161])};v283=1 + 0;end end break;end end end if ((((1549 -(341 + 137)) -(24 + 23))<=(4883 -(1519 + (630 -356)))) and ((2 + 0)==v158)) then local v284=171 -(134 + 37);while true do if ((v284==(0 -0)) or ((1935 + 720)==((120 -44) + 4))) then for v308=1071 -(521 + 549),v160 do v91[v161 + v308]=v162[v308];end v163=v162[1141 -(11 + 1129)];v284=1 + 0;end if (((1031 -397)<=(11239 -8078)) and (v284==(1 + 0))) then v158=1 + 2;break;end end end end break;end if (((5858 -(177 + 1586))<((4040 + 1616) -(253 + 1057))) and ((1 + 0)==v157)) then v160=nil;v161=nil;v157=3 -1;end end break;end if ((v156==(3 -1)) or ((234 + 3996)<=(1168 -614))) then v161=nil;v162=nil;v156=1603 -(159 + (2564 -(624 + 499)));end if (((4007 -(61 + 127))>=((3138 -(210 + 374)) -1499)) and (v156==(1 + 0))) then v159=nil;v160=nil;v156=560 -(102 + 456);end end elseif (((1018 + 24)<((7572 -(1208 + 694)) -3304)) and (v94>((227 -144) -55))) then v91[v93[(1 + 2) -(1 + 0)]]=v33[v93[2 + 1]];else for v228=v93[7 -5],v93[3 + 0 + 0] do v91[v228]=nil;end end elseif ((v94<=(81 -51)) or ((2354 -1211)>(6844 -3811))) then local v164=17 -(5 + 9 + 3);local v165;local v166;local v167;while true do if (((4773 -3264)>(223 + 1188)) and (v164==(0 -0))) then v165=0 -(0 -0);v166=nil;v164=1 + 0;end if (((1 -(1885 -(1037 + 848)))==v164) or ((9547 -(5118 -(149 + 170)))<=(8334 -5282))) then v167=nil;while true do if (((1356 -(472 + 113 + 620))<(692 + 197 + 1659)) and (v165==(1 -0))) then for v260=v166 + ((383 + 154) -(57 + (605 -(18 + 108)))),v93[3 + 1 + 0] do v167=v167   .. v91[v260];end v91[v93[2 -(1982 -(962 + 1020))]]=v167;break;end if ((v165==(0 + 0)) or ((191 + 221)==(1592 + 2927))) then local v247=1131 -(523 + 608);while true do if ((1==v247) or ((4525 -(30 + (819 -474)))<=(3062 -(683 + 293)))) then v165=1 + 0;break;end if ((v247==((0 -0) -0)) or ((562 + (10553 -6607))<=(764 + (3776 -(879 + 1007))))) then v166=v93[4 -1];v167=v91[v166];v247=1 -0;end end end end break;end end elseif ((((4909 -(238 + 1516)) -593)<=((1836 -(1219 + 276)) + 2467)) and (v94>(121 -90))) then v91[v93[(2 + 1) -(1 + 0)]]=v34[v93[1988 -(888 + 1097)]];else local v208=0 + 0;local v209;local v210;local v211;while true do if ((v208==((3141 -1907) -(1199 + 35))) or ((5485 -2960)<((907 -(168 + 10)) + (2597 -(184 + 1387))))) then local v242=0 + 0 + 0;while true do if ((v242==(1 + 0)) or (((1279 -(376 + 387)) + 3625)<=(11141 -8758))) then v208=2 -(2 -1);break;end if ((v242==((2658 -872) -(295 + 1491))) or ((6468 -(1142 + 586))<(1250 + 189 + 102))) then v209=404 -(136 + 268);v210=nil;v242=1985 -(1826 + 158);end end end if ((v208==(1857 -((5662 -4112) + 99 + 207))) or ((1092 + 510)<=(958 -256))) then v211=nil;while true do if (((989 + 1785)>(615 + 430)) and (v209==(0 -(0 + 0)))) then local v273=0 -0;local v274;while true do if (((48 + 37)<=(898 -(125 + 77))) and (v273==(0 -0))) then v274=0 + 0;while true do if ((3806>=(14899 -11469)) and (v274==(0 + 0))) then v210=v93[1 + 1];v211={};v274=1 + 0 + 0;end if ((v274==(1 + 0)) or (((4558 -(131 + 1039)) -((623 -(186 + 116)) + (5727 -4386)))==(1487 -1135))) then v209=1 -(0 -0);break;end end break;end end end if ((2957>(2732 -(525 + 987 + 290))) and ((38 -(35 + 2))==v209)) then for v285=3 -2, #v90 do local v286=0 + 0;local v287;local v288;while true do if ((v286==(0 -0)) or (((2062 + 661) -812)<((2888 + 2536) -3900))) then v287=0;v288=nil;v286=1 + 0;end if (((1465 -740)<(214 + 2654)) and (v286==((2221 -(158 + 1505)) -(305 + 252)))) then while true do if ((v287==(0 + 0)) or ((670 + 352 + 701)<941)) then v288=v90[v285];for v334=923 -(619 + (954 -(235 + 415))), #v288 do local v335=0 + 0;local v336;local v337;local v338;local v339;while true do if ((v335==(1743 -(1190 + 552))) or ((9439 -6173)>=(6700 -3183))) then local v343=0 + 0;while true do if ((v343==(1 -0)) or (((4624 -(961 + 717)) + (1175 -(342 + 141)))==(4431 -2947))) then v335=2 -0;break;end if (((77 + 877 + 121)>=(28 + 6)) and (v343==(0 -0))) then v338=nil;v339=nil;v343=1;end end end if ((v335==(1446 -(149 + 1295))) or (((6941 + 4384) -6931)==(1779 + (8167 -6412)))) then while true do if (((2461 + 389)>(6794 -5218)) and (v336==(0 + 0))) then local v350=0 + 0;local v351;while true do if (((445 -(273 + 172))==v350) or (((3444 + 3943) -(4793 -(552 + 108)))==(2585 + 671))) then v351=0 + 0;while true do if ((v351==(1 -0)) or ((1709 + 1240 + (1877 -(211 + 937)))<(8191 -(6046 -(163 + 236))))) then v336=791 -(338 + 452);break;end if ((v351==((658 + 186) -(463 + 381))) or (((2327 -995) -(2258 -(1038 + 567)))>((2495 -(554 + 188)) + 3058))) then v337=v288[v334];v338=v337[1 + 0 + 0];v351=1 + 0;end end break;end end end if (((466 + 3557)>=((6833 -(649 + 521)) -(1366 + 357))) and (v336==(68 -(22 + 16 + 29)))) then v339=v337[6 -4];if (((v338==v91) and (v339>=v210)) or ((4635 -(45 + 3))>(8795 -3798))) then local v353=0 + 0;local v354;while true do if (((419 + 84 + 940)<=(4231 -(115 + 435))) and (v353==(0 -(0 -0)))) then v354=0 -0;while true do if (((2261 + 1227 + 308)>2228) and (v354==(0 + 0))) then v211[v339]=v338[v339];v337[1 + 0]=v211;break;end end break;end end end break;end end break;end if ((v335==(276 -((2142 -(486 + 1461)) + (146 -65)))) or ((3398 + 598)<(3013 -(292 + 170)))) then local v344=0 + 0;while true do if (((1 + 0)==v344) or ((6481 -(84 + 1446))==(1583 -560))) then v335=1 + 0;break;end if ((v344==(0 -0)) or ((23 + 502 + 36)==((1642 + 4008) -3809))) then v336=(1648 -(172 + 1104)) -(304 + 68);v337=nil;v344=(14 -11) -2;end end end end end break;end end break;end end end break;end end break;end end end elseif ((v94<=(34 + 4)) or (1724>(2260 + 170))) then if (((2681 + 1609)<=(4033 + 835)) and (v94<=((1895 -1452) -(180 + 228)))) then if ((v94<=(626 -(200 + 393))) or ((380 -(53 + 20))>=(4729 -(884 + 210)))) then local v168=(171 -(49 + 122)) + (0 -0);local v169;local v170;local v171;local v172;while true do if ((v168==((2 -0) -1)) or ((12714 -7945)<=(2248 -(45 + 1124)))) then v171=nil;v172=nil;v168=1 + 1;end if (((6324 -2223)>((2325 -(92 + 29)) -(248 + 202 + 146))) and ((2 + 0)==v168)) then while true do if ((v169==(1704 -(884 + 820))) or ((3346 -(105 + (1488 -(737 + 114))))<=(617 + 100 + 277))) then local v248=153 -(57 + (149 -53));while true do if ((v248==(0 + 0)) or (((1427 -862) + 967)>((6526 -(1087 + 828)) -((1576 -1112) + (2237 -1768))))) then local v289=0 -0;while true do if ((v289==((2 -1) + 0)) or ((5627 -(1196 + 38 + 203))==(3441 + 364))) then v248=2 -1;break;end if ((v289==0) or ((3 + 162 + 3823)<=(4283 -(516 + 1088)))) then v170=v86[v93[2 + 1]];v171=nil;v289=1 + 0;end end end if ((v248==(3 -2)) or ((2923 -(596 + 212))>=(2817 + 1369))) then v169=1 + 0;break;end end end if ((v169==(1 -0)) or (((1589 -599) + 2760)>=((3472 -(105 + 716)) + 2285))) then local v249=1449 -(175 + 1274);local v250;while true do if (((0 -0)==v249) or ((2703 -(488 + 892))==(6187 -(2347 + 861)))) then v250=0 -(0 + 0);while true do if (((2868 -(1150 + 737))<(3856 -2833)) and (0==v250)) then v172={};v171=v9({},{__index=function(v310,v311)local v317=0 + 0;local v318;local v319;while true do if ((2051>(3385 -(615 + 1194))) and (v317==(1 + 0))) then while true do if ((v318==0) or ((20000 -15536)<(8561 -6516))) then local v345=0 + 0;while true do if ((((12761 + 1222) -10984)<(15293 -(5020 + 6948))) and ((1916 -(435 + 1481))==v345)) then local v352=1851 -(1368 + (2224 -(1111 + 630)));while true do if (((311 + 1620 + 462)>=(6281 -4161)) and (v352==(0 + 0))) then v319=v172[v311];return v319[1845 -(159 + 1685)][v319[(1573 -(53 + 253)) -(686 + 579)]];end end end end end end break;end if ((v317==((535 + 403) -(807 + 131))) or ((1 + 2 + 1091)>=(2128 -765))) then v318=0 + 0;v319=nil;v317=(975 -(445 + 529)) + 0;end end end,__newindex=function(v312,v313,v314)local v320=0 + 0;local v321;local v322;while true do if ((v320==(0 -0)) or ((1760 -(574 + 733))==(3837 -(166 + 5)))) then v321=154 -(35 + 119);v322=nil;v320=1308 -(614 + (1398 -705));end if (((7048 -5187)<(11468 -9113)) and (v320==(1 + 0))) then while true do if ((v321==(88 -((192 -141) + (71 -34)))) or ((3839 -(3384 -(852 + 778)))<=(5209 -3162))) then v322=v172[v313];v322[1 + 0][v322[18 -(9 + (1732 -(458 + 1267)))]]=v314;break;end end break;end end end});v250=1 + 0;end if (((3 -2)==v250) or ((14064 -9224)<(9602 -6205))) then v169=(1686 -(674 + 1007)) -3;break;end end break;end end end if (((6 -4)==v169) or (((1116 + 1576) -(1615 + 99))>=((21182 -14935) -4000))) then for v261=398 -(219 + 178),v93[430 -(127 + 299)] do local v262=0 + 0;local v263;local v264;while true do if (((2220 + 300)>(96 + 337)) and (v262==(2 -1))) then while true do if (((10927 -8563)<=((1639 -694) + 2160)) and (v263==(0 -0))) then local v315=1200 -(558 + 642);while true do if ((v315==(724 -(451 + 272))) or ((2593 + 208)<=((3133 -(1536 + 254)) + 755))) then v263=(3 + 0) -2;break;end if (((1800 -(340 + (81 -20)))>=(1723 -(125 + 309 + 723))) and (v315==(802 -((1980 -1435) + 257)))) then v77=v77 + (129 -(70 + 58));v264=v84[v77];v315=2 -1;end end end if ((v263==(2 -1)) or ((4346 -((1327 -572) + 1188))<(24 + 44))) then if ((((2793 -748) + (2386 -1744))>=(3730 -((1316 -872) + 1316))) and (v264[1 + 0]==((1551 -(94 + 821)) -(29 + 586)))) then v172[v261-(1 -0)]={v91,v264[6 -3]};else v172[v261-(1 + 0)]={v33,v264[3]};end v90[ #v90 + (442 -(348 + 93))]=v172;break;end end break;end if (((5724 -(423 + 855 + 536))>=(9032 -5750)) and (v262==(0 + (0 -0)))) then local v297=(1178 -(277 + 901)) + 0;while true do if ((v297==((330 + 75) -(96 + 308))) or ((701 -(272 + 87))>((4910 + 8167) -8776))) then v262=1 -0;break;end if ((((2017 -1475) -(244 + 298))==v297) or ((10642 -7166)==(948 + 243))) then v263=0 -0;v264=nil;v297=(1629 -(973 + 207)) -(345 + 103);end end end end end v91[v93[3 -1]]=v29(v170,v171,v34);break;end end break;end if (((3571 + 65)<((3672 + 6065) -5487)) and (v168==((1551 -(1256 + 295)) + 0))) then local v230=0 -0;while true do if (((176 + 843)==((11414 -8003) -2392)) and (((1793 -(17 + 41)) -((1221 -739) + 1252))==v230)) then v168=277 -(86 + 190);break;end if (((14510 -11357)==(1966 + 1187)) and (v230==(0 + 0))) then v169=0 -0;v170=nil;v230=1 -0;end end end end elseif ((v94>(73 -39)) or ((195 -91)>=(448 + 127))) then v91[v93[5 -(14 -11)]]=v93[(2 -0) + 1]~=(1459 -(304 + 1155));else local v213=(357 -176) -(180 + 1);local v214;while true do if (((4556 -2911)>=(3384 -2287)) and (v213==(1969 -(180 + 1789)))) then v214=v93[1120 -(625 + 493)];do return v12(v91,v214,v214 + v93[3]);end break;end end end elseif (((5062 -(1154 + 746))==(1798 + 1364)) and (v94<=(35 + (2 -1)))) then if (((11119 -7955)<(14563 -9968)) and (v91[v93[426 -(298 + 126)]]~=v91[v93[5 -1]])) then v77=v77 + 1 + 0 + 0;else v77=v93[(1 -0) + 2];end elseif ((v94>(156 -(25 + 94))) or ((1809 -(1329 + 16))<(60 + 5 + 31))) then v91[v93[4 -2]]=v93[5 -2];else v91[v93[1 + 0 + 1]]=v91[v93[3 + 0]][v91[v93[153 -((1282 -(728 + 449)) + 44)]]];end elseif ((v94<=(387 -(246 + 100))) or ((2663 -(1119 + 91))>(4937 -(1594 + 363)))) then if ((v94<=(1523 -(1100 + 384))) or ((11644 -7461)<(3450 -(109 + 618 + 732)))) then if (((4210 -(247 + 118))>=(4389 -(226 + 1107))) and v91[v93[2]]) then v77=v77 + 1 + 0;else v77=v93[1 + (3 -1)];end elseif ((v94>(9 + 31)) or ((1196 -(31 + 363))==((3230 + 1424) -(1699 + 292)))) then if ((v93[1 + 1]==v91[v93[3 + 1]]) or ((4498 -(744 + 700))<=(657 + 1891))) then v77=v77 + 1 + 0 + 0;else v77=v93[(8349 -6476) -(1788 + 82)];end elseif ( not v91[v93[5 -3]] or (((438 + 2301) -(254 + (1343 -(177 + 879))))<(1058 -844))) then v77=v77 + (1912 -(1145 + 766));else v77=v93[169 -(155 + 11)];end elseif (((5509 -(664 + 267 + 997))>(1019 -((292 -51) + 323))) and (v94<=(42 + (0 -0)))) then do return;end elseif ((((1636 -893) + (1425 -(335 + 1007)))==((988 + 292) -(73 + 381))) and (v94>(157 -114))) then local v217=(741 + 979) -(1150 + 570);local v218;local v219;local v220;local v221;local v222;while true do if (((3405 + 379)>(760 + 446)) and (v217==((1502 -(502 + 1000)) -0))) then v218=(936 + 204) -(305 + 835);v219=nil;v217=1 + 0 + 0;end if ((((2000 -758) + 1221)<((15076 -10756) -(4 + 31 + 41 + 194))) and (v217==((1665 -(712 + 949)) -2))) then v222=nil;while true do if ((((985 + 4548) -1821)<=(21403 -16726)) and (v218==((1481 -(797 + 682)) + 0))) then for v290=v219,v78 do local v291=0 + 0;while true do if ((((1859 + 2631) -(473 + 835))>(1619 -(394 + 315 + 531))) and (v291==(0 -(1524 -(534 + 990))))) then v222=v222 + (1596 -(1337 + 258)) + 0;v91[v290]=v220[v222];break;end end end break;end if (((2838 -((971 -(457 + 386)) + 314))<(8498 -4968)) and (v218==(1 -0))) then local v275=0 -0;while true do if (((10196 -(27763 -21638))>(1926 -(519 + 813))) and (v275==(0 + 0))) then v78=(v221 + v219) -(1 -(0 -0));v222=(0 + 0) -0;v275=1 + 0;end if ((v275==(3 -2)) or ((3194 -(1171 + 300))>(2005 + 569))) then v218=2;break;end end end if ((v218==((896 -177) -(40 + (774 -(7 + 88))))) or (((4419 -3356) + 1885)<=1227)) then local v276=517 -(191 + 326);while true do if (((0 -0)==v276) or (((5866 -(927 + 757)) -((1608 -(15 + 1199)) + (1555 -1050)))==(3302 -(139 + 1154)))) then v219=v93[5 -3];v220,v221=v88(v91[v219](v12(v91,v219 + (922 -(189 + (1179 -(78 + 369)))),v93[1704 -(1485 + 216)])));v276=(2 -1) + 0;end if ((v276==(1 -0)) or ((9522 -5568)<1271)) then v218=1 + 0;break;end end end end break;end if ((((15644 -7539) -6396)<=(4769 -(101 + 685))) and (v217==((2 -1) + (1760 -(1386 + 374))))) then v220=nil;v221=nil;v217=1 + 1;end end else local v223=0 + 0;local v224;local v225;local v226;local v227;while true do if ((v223==((869 -(272 + 596)) + 0)) or (((2063 -(41 + 74)) -757)>(3524 -(52 + 1145)))) then v226=nil;v227=nil;v223=(5215 -3516) -(1408 + 289);end if (((1956 -(24 + (2187 -(476 + 1411))))==(2411 -(29 + 750))) and (v223==(0 -0))) then v224=0 -0;v225=nil;v223=2 -1;end if (((3195 -(1512 + 138))<(2955 -646)) and (v223==((3 + 0) -(405 -(330 + 74))))) then while true do if (((7002 -4953)==(5464 -3415)) and (v224==(1 + 0))) then v227=nil;while true do if ((v225==(1 -0)) or ((1393 -(76 + 157 + 172))>(1572 + 1532 + 607))) then v91[v226 + 1 + 0]=v227;v91[v226]=v227[v93[(2232 -1375) -(726 + 127)]];break;end if (((9203 -6070)==((17388 -12563) -(1024 + 668))) and (v225==(855 -(17 + 838)))) then local v303=0 -0;while true do if (((0 + 0)==v303) or ((1205 + 638)>(1882 + 24))) then v226=v93[2 -0];v227=v91[v93[1 + 1 + 1]];v303=1 + 0;end if (((2716 + 268 + 357)>(3396 -(1822 + 59))) and (v303==(1496 -(197 + (2031 -(98 + 635)))))) then v225=(2 -0) -1;break;end end end end break;end if ((v224==(1138 -(568 + 570))) or ((371 + 423)>(6119 -(3038 -(881 + 797))))) then local v277=0 -0;while true do if (((1 + (351 -(298 + 53)))==v277) or (((783 -(290 + 457)) + 1394)<=(856 -515))) then v224=1 -(0 + 0);break;end if ((v277==(0 + 0)) or (4835<((1850 -1266) + 2388))) then v225=277 -((2188 -(1826 + 86)) + 1);v226=nil;v277=1108 -((3040 -2290) + 357);end end end end break;end end end v77=v77 + (2 -1);break;end if ((v99==((3924 -2607) -(1237 + 80))) or ((340 + 1822)<=(4672 -(1910 + 677)))) then local v105=(1572 -(1409 + 163)) -0;while true do if ((v105==(824 -(561 + 197 + (198 -(102 + 31))))) or ((1471 -(877 + 352))>=(3737 -(36 + 134)))) then v99=1236 -(76 + 1159);break;end if (((1945 -(159 + 69 + 215))==(2236 -(314 + 73 + 347))) and (v105==(0 -0))) then local v110=0 + 0;while true do if (((1673 -(92 + 65))>(698 -355)) and (v110==(1 -0))) then v105=897 -(74 + 822);break;end if (((287 + 1185)>(34 + 860)) and (v110==((0 -0) -0))) then v93=v84[v77];v94=v93[787 -(379 + 407)];v110=(1546 -(388 + 39)) -(423 + 695);end end end end end end break;end end break;end end end end A,B=v27(v10(v81));if  not A[1] then local v95=v32[4][v77] or "?";error("Script error at ["   .. v95   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end end end return v29(v28(),{},v16)();end if (v17==6) then v28=nil;function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51~=1) then else v54=nil;v55=nil;v51=2 + 0;end if (v51==(0 + 0)) then v52=237 -(129 + 108);v53=nil;v51=1;end if (v51~=(185 -(150 + 33))) then else local v73=0 + 0;while true do if (v73~=(180 -(44 + 136))) then else v56=nil;v57=nil;v73=1 -0;end if (1~=v73) then else v51=4 -1;break;end end end if (v51==3) then v58=nil;while true do local v74=0;local v75;local v76;while true do if (v74~=1) then else while true do if (0~=v75) then else v76=1321 -(640 + 681);while true do if (v76==0) then local v102=0 + 0;while true do if (v102~=(1 -0)) then else v76=1;break;end if (v102~=0) then else if (v52~=(288 -(50 + 237))) then else local v106=0;while true do if ((395 -(147 + 248))~=v106) then else local v111=0 -0;local v112;while true do if (v111==(0 -0)) then v112=144 -(26 + 118);while true do if (v112~=1) then else v106=994 -(812 + 181);break;end if (v112==0) then local v173=0;while true do if ((1 + 0)==v173) then v112=1 + 0;break;end if (v173==0) then v57=v23();v58={};v173=1;end end end end break;end end end if (v106==(1 + 0)) then local v113=0;local v114;while true do if (v113~=(1632 -(1558 + 74))) then else v114=0;while true do if (v114~=(389 -(286 + 102))) then else v106=409 -(399 + 8);break;end if (v114~=(1396 -(1275 + 121))) then else for v177=1,v57 do local v178=0 + 0;local v179;local v180;local v181;while true do if (v178~=0) then else local v235=0 -0;while true do if (v235~=1) then else v178=1;break;end if (v235~=0) then else v179=1977 -(1196 + 781);v180=nil;v235=1 + 0;end end end if (v178~=(1 + 0)) then else v181=nil;while true do if (v179~=1) then else if (v180==(1843 -(827 + 1015))) then v181=v21()~=(0 -0);elseif (v180==2) then v181=v24();elseif (v180~=(2 + 1)) then else v181=v25();end v58[v177]=v181;break;end if (v179~=(1033 -(207 + 826))) then else local v266=0;while true do if (v266==0) then v180=v21();v181=nil;v266=834 -(622 + 211);end if (1~=v266) then else v179=1;break;end end end end break;end end end v56[3]=v21();v114=3 -2;end end break;end end end if (v106==2) then v52=7 -5;break;end end end if (v52~=0) then else local v107=0 -0;local v108;local v109;while true do if (v107==(694 -(330 + 363))) then while true do if (v108==0) then v109=0;while true do if (v109==1) then local v175=0 + 0;while true do if (0==v175) then v55={};v56={v53,v54,nil,v55};v175=1;end if (v175==(1297 -(1225 + 71))) then v109=1728 -(1522 + 204);break;end end end if (v109==(162 -(132 + 30))) then local v176=0 -0;while true do if (v176==(0 -0)) then v53={};v54={};v176=1 + 0;end if (v176==1) then v109=1 + 0;break;end end end if (v109==2) then v52=1429 -(160 + 1268);break;end end break;end end break;end if (v107==0) then v108=0 -0;v109=nil;v107=1;end end end v102=1315 -(563 + 751);end end end if (v76==(1 -0)) then if (v52==(544 -(288 + 254))) then local v103=0 -0;local v104;while true do if (v103~=(0 + 0)) then else v104=0;while true do if (v104==(1525 -(634 + 891))) then local v115=0 -0;while true do if (v115~=(1 -0)) then else v104=1;break;end if (v115==(0 -0)) then for v117=1,v23() do local v118=374 -(326 + 48);local v119;local v120;local v121;while true do if (v118==0) then local v182=0 + 0;while true do if ((1566 -(684 + 882))~=v182) then else v119=0;v120=nil;v182=1;end if (v182==(1977 -(1647 + 329))) then v118=1;break;end end end if (v118~=1) then else v121=nil;while true do if (v119~=(362 -(229 + 132))) then else while true do if (v120==(0 -0)) then v121=v21();if (v20(v121,1,1 + 0)~=(0 + 0)) then else local v292=398 -(155 + 243);local v293;local v294;local v295;local v296;while true do if (v292==(0 + 0)) then v293=0;v294=nil;v292=1 + 0;end if (v292~=2) then else while true do if ((1 + 0)~=v293) then else local v326=0 + 0;while true do if (v326==0) then local v342=0;while true do if (v342==(3 -2)) then v326=1;break;end if (v342~=(1089 -(462 + 627))) then else local v347=0;while true do if (v347==(0 + 0)) then v296={v22(),v22(),nil,nil};if (v294==(0 + 0)) then local v355=0 + 0;local v356;local v357;while true do if ((1 + 0)~=v355) then else while true do if (v356==0) then v357=0 + 0;while true do if ((1363 -(1209 + 154))~=v357) then else v296[290 -(265 + 22)]=v22();v296[2 + 2]=v22();break;end end break;end end break;end if (v355==(0 + 0)) then local v361=0;while true do if (v361~=(1 + 0)) then else v355=1;break;end if (v361~=(0 + 0)) then else v356=0 + 0;v357=nil;v361=1;end end end end elseif (v294==1) then v296[3]=v23();elseif (v294==2) then v296[1 + 2]=v23() -(2^(34 -18));elseif (v294~=3) then else local v365=0;local v366;local v367;while true do if ((0 -0)~=v365) then else v366=0;v367=nil;v365=1;end if (v365==(1 + 0)) then while true do if (v366==(0 -0)) then v367=0 -0;while true do if (v367~=(394 -(83 + 311))) then else v296[214 -(120 + 91)]=v23() -(2^16);v296[1721 -(238 + 1479)]=v22();break;end end break;end end break;end end end v347=1 + 0;end if (v347==1) then v342=1;break;end end end end end if (v326==1) then v293=321 -(21 + 298);break;end end end if (v293==(1418 -(1299 + 119))) then local v327=0 + 0;local v328;while true do if ((0 -0)==v327) then v328=516 -(195 + 321);while true do if (v328==(0 + 0)) then local v348=0;while true do if (1~=v348) then else v328=1 + 0;break;end if (0==v348) then v294=v20(v121,2,4 -1);v295=v20(v121,4,6);v348=1;end end end if (v328==1) then v293=1;break;end end break;end end end if (v293==3) then if (v20(v295,3,3)~=1) then else v296[578 -(229 + 345)]=v58[v296[4]];end v53[v117]=v296;break;end if (v293~=(588 -(231 + 355))) then else local v330=0 -0;local v331;while true do if (v330~=(1252 -(111 + 1141))) then else v331=526 -(142 + 384);while true do if (v331~=(0 + 0)) then else local v349=0 + 0;while true do if (v349~=1) then else v331=3 -2;break;end if (v349~=0) then else if (v20(v295,1 -0,884 -(107 + 776))==1) then v296[2 + 0]=v58[v296[2]];end if (v20(v295,2,4 -2)~=1) then else v296[3]=v58[v296[3 + 0]];end v349=1 + 0;end end end if (v331==1) then v293=752 -(149 + 600);break;end end break;end end end end break;end if (v292~=1) then else local v306=1105 -(432 + 673);while true do if (v306~=(1 + 0)) then else v292=1263 -(553 + 708);break;end if (v306~=(1597 -(475 + 1122))) then else v295=nil;v296=nil;v306=1;end end end end end break;end end break;end if (v119==0) then local v236=0;while true do if (v236==0) then v120=0;v121=nil;v236=1;end if (v236==(3 -2)) then v119=2 -1;break;end end end end break;end end end for v122=2 -1,v23() do v54[v122-(832 -(390 + 441))]=v28();end v115=2 -1;end end end if (v104==(431 -(27 + 403))) then local v116=0 -0;while true do if (v116==0) then for v124=1,v23() do v55[v124]=v23();end return v56;end end end end break;end end end break;end end break;end end break;end if (v74~=(0 -0)) then else v75=0 + 0;v76=nil;v74=1;end end end break;end end end v29=nil;v17=7;end if (v17==2) then function v21()local v59=(1978 -1340) -(447 + 191);local v60;while true do if (v59==((367 + 7) -(136 + 237))) then return v60;end if (v59==(0 + 0)) then v60=v1(v15,v18,v18);v18=v18 + (1800 -(1110 + 689));v59=1297 -((1293 -(76 + 294)) + 373);end end end v22=nil;function v22()local v61=321 -(90 + 231);local v62;local v63;while true do if (v61==((2 -1) + 0)) then return (v63 * (1993 -(768 + 969))) + v62;end if (v61==(0 + 0 + 0)) then v62,v63=v1(v15,v18,v18 + 2);v18=v18 + ((2 + 7) -7);v61=1 + 0;end end end v17=3;end if (v17==1) then v20=nil;function v20(v35,v36,v37)if v37 then local v70=0 + 0;local v71;while true do if (v70==(0 + (234 -(217 + 17)))) then v71=(v35/((1045 -(589 + 454))^(v36-(676 -(56 + (2191 -1572))))))%((1635 -(102 + 34 + 1497))^(((v37-(2 -1)) -(v36-(1 + 0))) + ((2194 -(351 + 1173)) -(145 + 524))));return v71-(v71%1);end end else local v72=2^(v36-(1 + 0));return (((v35%(v72 + v72))>=v72) and (877 -(429 + 447))) or (0 + 0 + (0 -0));end end v21=nil;v17=2;end end end vv8());end
