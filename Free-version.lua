--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then vv9());break;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v66=v3(v1(v30,16));if v19 then local v71=v6(v66,v19);v19=nil;return v71;else return v66;end end end);local function v20(v31,v32,v33)if v33 then local v67=(v31/((2 + 0)^(v32-((2637 -1187) -(772 + 677)))))%((884 -(790 + 92))^(((v33-(424 -(14 + 4 + 405))) -(v32-(849 -((505 -(4 + 184)) + (1903 -(381 + 991)))))) + (1 -0)));return v67-(v67%1);else local v68=(33 -(15 + 16))^(v32-(3 -2));return (((v31%(v68 + v68))>=v68) and (2 -1)) or (0 -0);end end local function v21()local v38=(1580 -(772 + 503)) -(265 + (1981 -(1640 + 301)));local v39;while true do if ((1 -0)==v38) then return v39;end if (v38==(0 + 0)) then v39=v2(v16,v18,v18);v18=v18 + 1;v38=1;end end end local function v22()local v40,v41=v2(v16,v18,v18 + 2);v18=v18 + (1039 -(421 + 616));return (v41 * (51 + 205)) + v40;end local function v23()local v42=157 -(66 + 91);local v43;local v44;local v45;local v46;while true do if (v42==(2 -1)) then return (v46 * (39919959 -23142743)) + (v45 * (24074 + 41462)) + (v44 * (422 -(7 + 159))) + v43;end if (v42==(64 -((200 -(41 + 102)) + 7))) then v43,v44,v45,v46=v2(v16,v18,v18 + ((26 -19) -4));v18=v18 + 4;v42=1;end end end local function v24()local v47=0 + 0;local v48;local v49;while true do if (v47==(2 -(1 -0))) then return (( -(2 + (418 -(354 + 64))) * v20(v49,17 + 15)) + (1575 -(295 + 1279))) * ((1397 -(963 + 432))^(v20(v49,1142 -(539 + 582),222 -((1507 -(1458 + 10)) + 152)) -((1262 + 2159) -2398))) * ((((v20(v49,155 -(26 + 128),1 + 19) * ((2 + 0)^(65 -33))) + v48)/((6 -4)^(29 + 16 + 7))) + (1018 -(425 + 592)));end if (v47==(1190 -(72 + 1118))) then v48=v23();v49=v23();v47=197 -(33 + 163);end end end local function v25(v34)local v50;if  not v34 then v34=v23();if (v34==(1335 -(1279 + 56))) then return "";end end v50=v4(v16,v18,(v18 + v34) -(1 + 0));v18=v18 + v34;local v51={};for v64=1, #v50 do v51[v64]=v3(v2(v4(v50,v64,v64)));end return v7(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if ((611 -(208 + 402))~=v52) then else v55=nil;v56=nil;v52=2;end if (v52~=(1 + 2)) then else v59=nil;while true do local v72=0;local v73;local v74;while true do if (v72~=(0 + 0)) then else v73=0 -0;v74=nil;v72=1;end if (v72==1) then while true do if (v73==0) then v74=0;while true do if ((754 -(752 + 2))==v74) then local v98=0 + 0;while true do if (v98==(1069 -(169 + 900))) then local v101=0;while true do if ((0 -0)~=v101) then else if (v53~=(1 + 0)) then else local v103=402 -(84 + 318);while true do if (v103==(0 + 0)) then local v196=1250 -(636 + 614);local v197;while true do if (v196~=0) then else v197=0;while true do if (v197==(0 -0)) then local v246=0;while true do if (0~=v246) then else v58=v23();v59={};v246=1437 -(813 + 623);end if (v246==(1 + 0)) then v197=1 + 0;break;end end end if (v197==1) then v103=1;break;end end break;end end end if (2==v103) then v53=1971 -(1236 + 733);break;end if (v103==(1 + 0)) then local v198=457 -(247 + 210);while true do if (v198==0) then local v216=0;while true do if (v216~=(1 -0)) then else v198=1;break;end if (v216==0) then for v265=1 + 0,v58 do local v266=0 + 0;local v267;local v268;local v269;while true do if (v266==0) then v267=0;v268=nil;v266=604 -(390 + 213);end if (v266==(905 -(318 + 586))) then v269=nil;while true do if (v267==(0 + 0)) then local v321=0 -0;local v322;while true do if (v321~=0) then else v322=0 -0;while true do if (v322==0) then local v339=0;while true do if (v339==0) then v268=v21();v269=nil;v339=1;end if (v339~=(1905 -(654 + 1250))) then else v322=1113 -(245 + 867);break;end end end if (v322==1) then v267=1;break;end end break;end end end if (v267~=(275 -(99 + 175))) then else if (v268==1) then v269=v21()~=(0 -0);elseif (v268==(9 -7)) then v269=v24();elseif (v268~=(3 + 0)) then else v269=v25();end v59[v265]=v269;break;end end break;end end end v57[3]=v21();v216=3 -2;end end end if (v198==(281 -(108 + 172))) then v103=3 -1;break;end end end end end if (v53~=0) then else local v104=0 -0;local v105;local v106;while true do if (v104~=(1127 -(802 + 324))) then else while true do if (v105~=0) then else v106=0;while true do if (v106==2) then v53=1 + 0;break;end if (v106~=1) then else local v248=0 + 0;local v249;while true do if (v248~=0) then else v249=0;while true do if (v249==(303 -(73 + 230))) then local v309=0 + 0;while true do if (v309~=(1 -0)) then else v249=1;break;end if (v309~=0) then else v56={};v57={v54,v55,nil,v56};v309=1 + 0;end end end if (v249==1) then v106=2;break;end end break;end end end if (v106~=(0 + 0)) then else local v250=0 + 0;local v251;while true do if (v250==(290 -(119 + 171))) then v251=1008 -(237 + 771);while true do if (v251~=(2 -1)) then else v106=1;break;end if (v251==0) then local v310=0;while true do if (v310~=(0 -0)) then else v54={};v55={};v310=1;end if (v310==1) then v251=1;break;end end end end break;end end end end break;end end break;end if (v104==(993 -(588 + 405))) then v105=0 -0;v106=nil;v104=1 + 0;end end end v101=1;end if ((1 -0)~=v101) then else v98=1;break;end end end if ((1 -0)~=v98) then else v74=1;break;end end end if (v74==1) then if (v53==(1015 -(248 + 765))) then local v99=256 -(216 + 40);local v100;while true do if (0==v99) then v100=0;while true do local v102=0;while true do if (0~=v102) then else if (v100~=(0 + 0)) then else for v203=1,v23() do local v204=0 + 0;local v205;local v206;while true do if (v204~=(2 -1)) then else while true do if (v205~=(954 -(252 + 702))) then else v206=v21();if (v20(v206,1 -0,1738 -(1296 + 441))==0) then local v278=0;local v279;local v280;local v281;while true do if ((1 + 2)==v278) then if (v20(v280,1406 -(1049 + 354),3)~=1) then else v281[4]=v59[v281[4]];end v54[v203]=v281;break;end if (v278~=0) then else local v312=0;while true do if (v312~=(1 + 0)) then else v278=1;break;end if (v312==(0 -0)) then v279=v20(v206,2,8 -5);v280=v20(v206,2 + 2,4 + 2);v312=1;end end end if (v278==(1006 -(545 + 460))) then local v313=0 + 0;while true do if (v313==1) then v278=2;break;end if (v313~=0) then else v281={v22(),v22(),nil,nil};if (v279==0) then local v331=0 -0;local v332;while true do if (v331~=0) then else v332=0 + 0;while true do if (0~=v332) then else v281[3 + 0]=v22();v281[473 -(425 + 44)]=v22();break;end end break;end end elseif (v279==(2 -1)) then v281[3]=v23();elseif (v279==2) then v281[3]=v23() -((3 -1)^16);elseif (v279~=3) then else local v346=0 + 0;local v347;while true do if (v346~=(0 -0)) then else v347=0;while true do if (v347~=0) then else v281[4 -1]=v23() -((1384 -(927 + 455))^(34 -18));v281[4]=v22();break;end end break;end end end v313=1 + 0;end end end if (2~=v278) then else local v314=0 + 0;while true do if (v314==(83 -(17 + 65))) then v278=3;break;end if (v314==0) then if (v20(v280,3 -2,1)~=1) then else v281[13 -(6 + 5)]=v59[v281[2 + 0]];end if (v20(v280,791 -(202 + 587),2)==(1 + 0)) then v281[3]=v59[v281[3]];end v314=1;end end end end end break;end end break;end if (v204~=(0 + 0)) then else local v230=0 -0;while true do if ((739 -(177 + 561))==v230) then v204=1;break;end if (v230==0) then v205=0;v206=nil;v230=1437 -(424 + 1012);end end end end end for v207=1756 -(1157 + 598),v23() do v55[v207-(1 + 0)]=v28();end v100=1 + 0;end if (v100~=(1 + 0)) then else local v199=0 -0;while true do if (v199==0) then for v231=1,v23() do v56[v231]=v23();end return v57;end end end break;end end end break;end end end break;end end break;end end break;end end end break;end if (v52~=(0 -0)) then else v53=0 + 0;v54=nil;v52=1;end if (v52~=(3 -1)) then else local v69=0 + 0;local v70;while true do if (v69==0) then v70=0;while true do if (v70~=(1 + 0)) then else v52=3;break;end if (v70==(262 -(19 + 243))) then local v94=0;while true do if (v94==0) then v57=nil;v58=nil;v94=1762 -(154 + 1607);end if (v94~=1) then else v70=1 + 0;break;end end end end break;end end end end end local function v29(v35,v36,v37)local v60=0;local v61;local v62;local v63;while true do if (v60==0) then v61=v35[1];v62=v35[2];v60=1;end if (v60==1) then v63=v35[3];return function(...)local v75=1;local v76= -1;local v77={...};local v78=v12("#",...) -1;local function v79()local v80=v61;local v81=Const;local v82=v62;local v83=v63;local v84=v27;local v85={};local v86={};local v87={};for v92=0,v78 do if ((v92>=v83) or ((1053 -586)==1193)) then v85[v92-v83]=v77[v92 + 1];else v87[v92]=v77[v92 + (1 -0)];end end local v88=(v78-v83) + (4 -3);local v89;local v90;while true do local v93=0 + 0;while true do if ((v93==0) or (((9577 -(458 + 290)) -6359)<((49 -19) + 13))) then local v97=(383 -(370 + 13)) -0;while true do if ((4440==(4168 + 272)) and (v97==(1710 -(802 + 908)))) then v89=v80[v75];v90=v89[766 -(394 + 371)];v97=1;end if ((v97==(1 -0)) or ((148 + (194 -(20 + 5)))==(140 + 1020))) then v93=1 + 0;break;end end end if ((v93==(1 + 0)) or ((3148 + (733 -305))>(6086 -(497 + 663)))) then if ((1009<(4222 -1672)) and (v90<=(72 -51))) then if ((2233==(2564 -(58 + 60 + 213))) and (v90<=((25 + 8) -23))) then if ((3369<=3831) and (v90<=(1215 -(745 + (1080 -614))))) then if ((v90<=(1556 -(925 + 630))) or ((452 + 1744)>(459 + 2075))) then if ((v90>(0 + 0)) or (4564<(4306 -(754 + 1108)))) then v87[v89[1 + 1]]=v87[v89[3]] -v89[(680 -(625 + 53)) + (2 -0)];else v87[v89[2]]=v87[v89[216 -(176 + 37)]][v89[3 + 1]];end elseif (((20191 -15434)>=(9179 -4875)) and (v90<=(3 -1))) then v87[v89[2 -0]]=v89[921 -(736 + 182)]~=(1459 -(570 + 889));elseif (((115 + 156)<((4163 -(996 + 343)) -(867 + 619))) and (v90==(2 + 1))) then for v200=v89[4 -2],v89[119 -(97 + 19)] do v87[v200]=nil;end else local v141=1321 -(247 + (1138 -(5 + 59)));local v142;local v143;local v144;local v145;local v146;local v147;while true do if ((v141==(1 + 0)) or (429>=(385 + 1027))) then v144=nil;v145=nil;v141=2 + (0 -0);end if (((771 + (2253 -1370))>=((1537 + 1648) -1581)) and ((2 + 0)==v141)) then v146=nil;v147=nil;v141=1 + 2;end if ((0==v141) or (3819>(3336 + 1084))) then v142=(0 -0) + 0;v143=nil;v141=1 -(0 -0);end if ((50==(179 -129)) and (((42 + 1150) -(463 + 726))==v141)) then while true do if ((v142==(5 -(1070 -(66 + 1001)))) or ((8327 -4025)>=(5890 -(549 + 1005)))) then v147=nil;while true do if (((4 -2)==v143) or ((3203 + (2867 -(685 + 601)))<=3983)) then for v282=v144,v76 do local v283=256 -(83 + 173);local v284;local v285;while true do if (((12277 -8120)>(255 -150)) and (v283==(1 + 0 + 0))) then while true do if (((14087 -11053)>=344) and (v284==(0 + 0))) then v285=(0 -0) -0;while true do if ((v285==((0 -0) + 0)) or ((3747 -2428)>((487 -381) + 3189))) then v147=v147 + 1 + 0;v87[v282]=v145[v147];break;end end break;end end break;end if (((2987 -(339 + 1130))==(3467 -(1058 + 891))) and (v283==(0 + 0))) then v284=1151 -(64 + 1087);v285=nil;v283=124 -(109 + 2 + 12);end end end break;end if ((v143==(1984 -(451 + 1533))) or (((6772 -(5 + 68)) -2589)<=(3860 -(107 + 39 + 528)))) then local v274=0;local v275;while true do if (((0 -0)==v274) or ((365 + 255)==(4000 -(1068 + 151)))) then v275=0 -0;while true do if ((4320>=(4247 -(324 + 649))) and (v275==((0 -0) -0))) then v144=v89[1 + 1];v145,v146=v84(v87[v144](v13(v87,v144 + (1082 -(811 + 270)),v76)));v275=275 -(155 + 119);end if (((3413 -(329 + 179))<(4772 -(47 + 271))) and (v275==(1606 -(608 + 997)))) then v143=1581 -(488 + 1092);break;end end break;end end end if (((2389 -(45 + 1661))<=(7020 -4572)) and (v143==1)) then local v276=0 -0;while true do if ((v276==(77 -(51 + 25))) or ((21861 -17154)<=(3525 -1521))) then v143=1 + 1;break;end if (((1 + 125)<(2795 -(1661 + 175))) and (v276==0)) then local v307=(0 + 0) -0;while true do if ((v307==((120 -74) -(4 + 42))) or ((11185 -6829)<=(4033 -1911))) then v76=(v146 + v144) -(1747 -(331 + 1415));v147=(933 -(71 + 862)) -0;v307=3 -2;end if ((v307==1) or (834<=(37 + 24))) then v276=321 -(11 + 309);break;end end end end end end break;end if ((v142==0) or (((153 + 2485) -(878 + 716))==(6452 -4268))) then local v236=(835 -(453 + 382)) -0;while true do if ((0==v236) or (4381<=(1832 -(872 + 854)))) then v143=0;v144=nil;v236=1393 -(1334 + 58);end if ((((573 + 315) -(380 + 144))==(1009 -(239 + 406))) and (v236==(4 -3))) then v142=1362 -(336 + 1025);break;end end end if ((((5442 -(225 + 1537)) -(78 + 143))==3459) and (v142==(1265 -(865 + 399)))) then v145=nil;v146=nil;v142=1 + 1;end end break;end end end elseif ((v90<=(4 + 3)) or (((9351 -4471) -(226 + 1536))<=2327)) then if ((v90<=(1324 -(563 + 756))) or (4222==(8051 -4744))) then local v110=0;local v111;local v112;while true do if ((v110==(510 -((1574 -(1070 + 137)) + 142))) or ((3286 + 608)==3018)) then while true do if (((6481 -(1364 + 356 + 221))>=(164 -(167 -59))) and (v111==0)) then v112=v89[1 + 1];v87[v112](v87[v112 + 1 + 0]);break;end end break;end if (((2504 -(93 + 59))==(603 + 1749)) and (v110==(999 -(303 + 696)))) then v111=0 -0;v112=nil;v110=1 + 0;end end elseif ((v90>(14 -8)) or (((3210 + 1500) -3051)>=((6147 -3141) -(23 + 147)))) then if ((2350>=(2427 -(54 + 1554))) and (v87[v89[1 + (1 -0)]]==v87[v89[(7 -4) + 1]])) then v75=v75 + (1 -0);else v75=v89[(14 -11) + (89 -(34 + 55))];end else local v148=0;local v149;local v150;while true do if (((1067 + 202)>(2321 -(618 + 1249))) and (1==v148)) then while true do if (((3956 + 891)>(98 + 3163)) and (v149==0)) then v150=v89[2];v87[v150]=v87[v150]();break;end end break;end if ((v148==(0 + 0)) or (2381>=(16517 -11692))) then v149=0 + 0;v150=nil;v148=381 -(138 + (889 -(269 + 378)));end end end elseif ((v90<=(1 + 7)) or (176>=(9 + 156 + 1433))) then local v113=758 -(132 + 626);local v114;local v115;local v116;while true do if ((1230==1230) and (v113==(1 + 0 + 0))) then v116=nil;while true do if (((906 + 1435)==(2460 -(97 + 22))) and (v114==(0 + 0))) then local v217=0 + 0;while true do if (((4973 -(175 + 717))>=(2940 + 731)) and (v217==(0 -0))) then v115=v89[(312 + 209) -(53 + 465)];v116=v87[v115];v217=1266 -((1662 -(574 + 367)) + 544);end if ((v217==1) or (4260<2250)) then v114=1;break;end end end if (((2030 -(578 + 232))<1986) and (v114==(1 + (1483 -(129 + 1354))))) then for v233=v115 + (1907 -(46 + 1860)),v89[(257 -(79 + 168)) -(442 -(21 + 415))] do v116=v116   .. v87[v233];end v87[v89[2 + 0]]=v116;break;end end break;end if (((15558 -10606)>(1255 -(301 + 707))) and ((1186 -(1137 + 49))==v113)) then v114=0 + (1286 -(724 + 562));v115=nil;v113=1;end end elseif ((4051>=1070) and (v90==9)) then local v151=0 -0;local v152;local v153;local v154;while true do if (((48 + 212)<=(9446 -4700)) and (v151==(0 + 0))) then v152=0;v153=nil;v151=1565 -(616 + 948);end if ((v151==((2 + 0) -1)) or (4177<(1973 + 1098))) then v154=nil;while true do if (((10109 -5786)>=2995) and (v152==1)) then while true do if ((3274<(5420 -1820)) and (v153==(0 -0))) then v154=v89[5 -3];v87[v154]=v87[v154](v13(v87,v154 + 1,v76));break;end end break;end if ((v152==(0 + 0)) or ((4609 -(419 + 42))<=(2427 + 1051))) then v153=0 -0;v154=nil;v152=1;end end break;end end else v87[v89[3 -1]]=v37[v89[3]];end elseif (((770 + 264 + 1270)<(4704 -1294)) and (v90<=(32 -17))) then if ((v90<=12) or ((703 -(169 + 187))>3312)) then if ((v90>(1697 -((870 -381) + 1197))) or ((11065 -7511)<(2654 -(1408 + (1197 -(248 + 413)))))) then v87[v89[2]]={};else v87[v89[710 -(300 + (1325 -917))]]=v29(v82[v89[8 -(1747 -(1064 + 678))]],nil,v37);end elseif ((v90<=(3 + 10)) or ((364 -104)>=(4127 + 607))) then v87[v89[4 -2]]=v87[v89[1930 -(1825 + 102)]] -v87[v89[8 -4]];elseif ((v90==(4 + 2 + (21 -13))) or (((6302 -4523) -1262)>2516)) then local v156=0 -0;local v157;local v158;local v159;local v160;local v161;local v162;while true do if (((303 + 12)==(2087 -((3106 -(254 + 1234)) + 154))) and (v156==(0 -0))) then v157=0 -0;v158=nil;v156=1 + 0;end if (((2974 -(1349 + 536))<(21 + 3012)) and (v156==(1 + 0 + 1))) then v161=nil;v162=nil;v156=1652 -(1311 + 338);end if (((4207 -(187 + 665))<=((10204 -(28 + 188)) -5645)) and (v156==(3 + 0))) then while true do if ((v157==(0 -0)) or ((5431 -(242 + 442))<(2832 + 183 + 142))) then local v238=0 + 0;while true do if (((17609 -13462)>2997) and (v238==(1 + 0 + 0))) then v157=1 + 0;break;end if ((v238==((4331 -2648) -((2525 -1859) + 1017))) or ((1472 -(749 + 522))>(1614 -(183 + 112)))) then v158=v89[2 -0];v159=v89[13 -9];v238=1 -0;end end end if (((6057 -(42 + 1092))>=3408) and (v157==(2 -1))) then local v239=0 -0;while true do if (((10424 -5725)>(3782 + (843 -(297 + 45)))) and (1==v239)) then v157=4 -2;break;end if (((1062 -845)<((1571 -(551 + 650)) + 320)) and ((0 + 0)==v239)) then v160=v158 + (3 -1);v161={v87[v158](v87[v158 + 1 + 0],v87[v160])};v239=3 -2;end end end if ((v157==(1733 -(1197 + 534))) or ((264 + 116)==(3123 -(1106 + 41)))) then for v252=1 + 0,v159 do v87[v160 + v252]=v161[v252];end v162=v161[409 -(262 + 146)];v157=5 -2;end if ((4910==4910) and (v157==3)) then if (((1332 + 2454)==(5577 -(1478 + 313))) and v162) then local v270=(0 -0) -0;local v271;while true do if ((v270==0) or ((8801 -4707)>=(4764 -(46 + 237)))) then v271=0 + 0;while true do if (((9920 -5014)>=(1258 + 352 + 24)) and (v271==(0 + (791 -(411 + 380))))) then v87[v160]=v162;v75=v89[3];break;end end break;end end else v75=v75 + ((1369 + 317) -(708 + 977));end break;end end break;end if ((v156==(1290 -(746 + 543))) or ((1992 -(315 + 780))>=((1450 + 3221) -(205 + 29)))) then v159=nil;v160=nil;v156=3 -1;end end elseif ((v87[v89[2]]~=v87[v89[486 -(397 + 57 + 28)]]) or ((7983 -4391)<(3579 -1786))) then v75=v75 + 1 + 0;else v75=v89[6 -3];end elseif ((432<=(1165 + 341)) and (v90<=(9 + 9))) then if (((2309 -1245)<=((531 + 5377) -(252 + 1188))) and (v90<=(33 -17))) then local v120=0;local v121;local v122;while true do if ((v120==(3 -2)) or (3078<=(2334 -(81 + 157)))) then while true do if (((4584 -1392)>=(219 + 2408)) and (v121==(0 -0))) then v122=v89[5 -3];v87[v122]=v87[v122](v13(v87,v122 + (1184 -(819 + 364)),v89[1497 -(466 + 1028)]));break;end end break;end if (((1816 -(152 + 1664))==v120) or ((5195 -(516 + 215))<(6094 -4348))) then v121=0 + 0;v122=nil;v120=1 + 0 + 0;end end elseif ((83<=4119) and (v90>(133 -(11 + 105)))) then local v163=955 -(457 + (1469 -971));local v164;local v165;while true do if (((214 + 154)<=(4038 -(189 + 11 + 1172))) and (v163==(1228 -((288 -117) + 1056)))) then while true do if ((1379<=(3904 -1211)) and (v164==0)) then v165=v89[1 + 1];do return v13(v87,v165,v165 + v89[5 -2]);end break;end end break;end if ((v163==(1772 -(1353 + 419))) or ((5312 -2701)>=(3849 -(520 + 134 + 26)))) then local v213=1789 -(646 + 1143);while true do if (((2471 -1469)<=(916 + 183)) and (((306 -(8 + 298)) -0)==v213)) then v164=1237 -(345 + 892);v165=nil;v213=637 -(494 + 142);end if (((26 + 97)<(5491 -3153)) and ((1 + 0)==v213)) then v163=1 + (317 -(179 + 138));break;end end end end else local v166=0 + 0;local v167;local v168;local v169;local v170;while true do if (((1417 -(844 + 558))<=(1650 -(320 + 635))) and (2==v166)) then while true do if ((v167==((0 + 0) -0)) or ((324 + 1061)>(6271 -3390))) then v168=v89[1178 -(1084 + 92)];v169={v87[v168](v13(v87,v168 + (2 -1),v89[1761 -(968 + 790)]))};v167=223 -(17 + 205);end if ((v167==(2 -1)) or ((2574 -(775 + 367))<(1863 -1211))) then v170=0;for v254=v168,v89[2 + 2] do local v255=0 + 0;local v256;while true do if ((3599<=(2072 + 1897)) and (v255==(0 -0))) then v256=0;while true do if ((3157<4104) and (v256==(0 -0))) then v170=v170 + 1 + 0;v87[v254]=v169[v170];break;end end break;end end end break;end end break;end if (((1 -0)==v166) or ((1185 -(677 + 123))==(6029 -(212 + 1158)))) then v169=nil;v170=nil;v166=2 + 0;end if ((v166==(1696 -(561 + (3401 -2266)))) or ((972 -649)>(9214 -(8576 -(1403 + 526))))) then v167=0 -0;v168=nil;v166=1;end end end elseif (((3796 + 37)>2158) and (v90<=((143 -78) -46))) then local v123=771 -(209 + 544 + 18);local v124;while true do if (((293 + 925)<=(2016 -(1505 -969))) and (v123==0)) then v124=v89[9 -7];v87[v124](v13(v87,v124 + 1,v89[8 -5]));break;end end elseif (((1168 + 811)>(3263 -(495 + 1259))) and (v90==((96 -43) -(933 -(626 + 274))))) then v87[v89[2 + 0]]=v87[v89[8 -5]];elseif (v87[v89[1518 -(627 + 889)]] or (1337==(262 + (3565 -(126 + 279))))) then v75=v75 + (980 -(786 + 193));else v75=v89[3 + 0 + 0];end elseif ((v90<=(337 -(213 + 92))) or ((5247 -(249 + (1292 -517)))<=(5868 -3622))) then if (((5990 -2025)>(1955 + (2186 -(600 + 161)))) and (v90<=(3 + 23))) then if ((v90<=23) or ((7334 -3113)<(1239 -(970 + 149)))) then if ((v90==(29 -7)) or ((573 + 2857)==(2320 -(553 + 217)))) then v87[v89[1 + 1]]();elseif (((2809 -(599 + 261))<(5071 -(1113 + 361))) and (v89[3 -1]==v87[v89[(760 -(641 + 115)) -0]])) then v75=v75 + (1 -0);else v75=v89[1077 -(789 + 285)];end elseif ((v90<=(1550 -(137 + 1389))) or (3667<=1451)) then local v125=0 -0;local v126;local v127;local v128;while true do if ((v125==1) or ((2627 -1345)<(248 + 226 + 32 + 691))) then v128=0 + 0;for v209=v126,v89[2 + 2] do local v210=0 + 0;local v211;local v212;while true do if (((4107 + 202)>=(3703 -(903 + 851))) and (v210==(780 -(368 + 411)))) then while true do if ((v211==(0 -0)) or ((3692 -1673)<(686 + (2669 -(1789 + 200))))) then v212=0 -(0 + 0);while true do if (((5111 -(1260 + 482))>(1172 -903)) and (v212==(0 -(0 -0)))) then v128=v128 + (2 -1);v87[v209]=v127[v128];break;end end break;end end break;end if (((7078 -5002)<(4104 -(745 + (1626 -(69 + 1211))))) and (0==v210)) then v211=0 + 0;v212=nil;v210=2 -1;end end end break;end if (((1865 + 1435)>(3017 -1110)) and ((1601 -(419 + 1182))==v125)) then local v202=0 + 0;while true do if ((v202==(948 -(316 + 251 + 381))) or (387>(262 + 2646))) then v126=v89[3 -1];v127={v87[v126](v87[v126 + (610 -(241 + 368))])};v202=(1517 -(1395 + 121)) + 0;end if (((5217 -(489 + 239))>=(2581 + 1183)) and (v202==(1 + 0))) then v125=(13 + 77) -(54 + 35);break;end end end end elseif (((3826 -(340 + 717 + 211))>(7528 -5595)) and (v90>(91 -66))) then local v172=1199 -(730 + 469);local v173;local v174;while true do if ((1==v172) or ((3649 -2709)>=3386)) then for v220=1 + 0, #v86 do local v221=(2058 -1262) -(742 + 54);local v222;local v223;while true do if ((v221==1) or (((17130 -12188) -2361)==4561)) then while true do if (((245 + 2047)==(7653 -5361)) and (v222==(0 -0))) then v223=v86[v220];for v293=0 -0, #v223 do local v294=0 -0;local v295;local v296;local v297;local v298;while true do if ((v294==(65 -(12 + 53))) or (835>2877)) then v295=0 -0;v296=nil;v294=4 -3;end if (((3479 -(895 + 112))==(3221 -(547 + 202))) and (v294==(2 -0))) then while true do if ((v295==(1 + 0)) or (((14288 -(640 + 1175)) -9874)==(3725 -(524 + 469)))) then v298=v296[2];if (((8822 -4259)>(7659 -4158)) and (v297==v87) and (v298>=v173)) then local v336=0;local v337;local v338;while true do if (((39 -(7 + 31))==v336) or (2268==(5127 -(430 + 69)))) then while true do if ((v337==0) or (4261==1398)) then v338=1945 -(972 + 973);while true do if ((v338==(0 + 0 + 0)) or ((945 + (401 -226))<=(3873 -2893))) then v174[v298]=v297[v298];v296[1]=v174;break;end end break;end end break;end if (((5063 -2136)>=(417 + (2927 -(397 + 1188)))) and (v336==(1470 -(904 + 566)))) then v337=0 + 0;v338=nil;v336=1716 -(91 + 1624);end end end break;end if (((7690 -4468)==(5369 -2147)) and (v295==(0 -0))) then local v330=0 -0;while true do if (((3675 -(166 + 534))>=(28 + 6 + 16)) and (v330==(1 + 0))) then v295=1 + 0;break;end if ((((808 + 262) -(504 + 566))==v330) or ((2626 -(332 + 18))>=4843)) then v296=v223[v293];v297=v296[42 -(16 + 25)];v330=1;end end end end break;end if ((v294==(1929 -(406 + 1522))) or ((2758 + 234)>(472 + 2575))) then v297=nil;v298=nil;v294=5 -(1672 -(1368 + 301));end end end break;end end break;end if (((2545 -(822 + 613))<=(94 + 3457)) and (v221==(0 -0))) then v222=231 -(164 + 67);v223=nil;v221=2 -1;end end end break;end if (((1818 + 925)>=((3380 -1392) -(12 + 1527))) and (v172==(91 -(29 + 62)))) then local v214=0;while true do if (((2944 + 968)>=(7145 -3833)) and (v214==(0 + 0))) then v173=v89[2];v174={};v214=(988 + 985) -(1480 + (1267 -775));end if ((2414<=(5732 -2300)) and (v214==(1 + 0))) then v172=797 -(310 + 486);break;end end end end else local v175=0 -0;local v176;local v177;local v178;while true do if (((5987 -(1441 + 210))>(60 + 332)) and (v175==(0 -0))) then v176=0 -0;v177=nil;v175=1;end if (((9 + 852)<(12551 -8334)) and ((4 -3)==v175)) then v178=nil;while true do if ((v176==(357 -(71 + 286))) or ((4320 -(514 + 470))<((427 -(132 + 79)) + 1851))) then v177=v89[3 -1];v178=v87[v89[8 -5]];v176=1 + 0;end if (((4208 -(92 + (2102 -1233)))<=(6047 -(1323 + 556))) and (v176==((998 -(313 + 684)) + 0))) then v87[v177 + 1]=v178;v87[v177]=v178[v89[16 -12]];break;end end break;end end end elseif ((v90<=29) or ((1965 + 1960)<=(12128 -8297))) then if (((5791 -2334)==3457) and (v90<=((594 + 10) -(272 + 305)))) then local v129=0 + 0;local v130;local v131;while true do if (((406 + 2496)==(5451 -2549)) and (v129==(0 + 0))) then v130=0 + 0;v131=nil;v129=1055 -(309 + 745);end if (((186 + 62 + 2318)>(2376 -(131 + 125 + 749))) and (v129==1)) then while true do if (((1485 + 993)<=(4661 -(1128 + 64 + 1))) and (v130==0)) then v131=v89[95 -(76 + 17)];v87[v131]=v87[v131](v87[v131 + (1 -0)]);break;end end break;end end elseif (((4849 -(662 + 699))>=(112 + 905)) and (v90>(1904 -(971 + 905)))) then if ((v87[v89[1 + 1]]==v89[4]) or (3074>=(3602 + (504 -(160 + 32))))) then v75=v75 + 1;else v75=v89[1963 -(192 + 1768)];end else local v179=(0 + 0) -(725 -(380 + 345));local v180;local v181;local v182;local v183;while true do if (((102 + 2609)<=(954 + 2000)) and (v179==(1541 -(841 + 699)))) then v76=(v182 + v180) -(2 -1);v183=0;v179=7 -5;end if ((v179==(0 -0)) or ((5002 -2890)>2524)) then v180=v89[1567 -(45 + 1520)];v181,v182=v84(v87[v180](v13(v87,v180 + (915 -(669 + 245)) + (981 -(442 + 539)),v89[1 + 2])));v179=2 -1;end if ((v179==2) or ((12384 -8148)<=(594 -307))) then for v225=v180,v76 do local v226=1319 -(156 + 1163);local v227;local v228;while true do if ((4806==(14781 -9975)) and (v226==(2 -1))) then while true do if (((1064 -(107 + (1922 -(983 + 173))))<3261) and (v227==(0 -0))) then v228=(0 -0) + 0;while true do if (((3920 -(1126 + 65))>=(1527 -((2977 -1643) + 92))) and (v228==0)) then v183=v183 + (409 -((609 -451) + 250));v87[v225]=v181[v183];break;end end break;end end break;end if ((3343==(6893 -3550)) and (v226==(0 -0))) then v227=1217 -(170 + 1047);v228=nil;v226=1;end end end break;end end end elseif ((v90<=(1665 -(1374 + 261))) or ((11863 -8797)>=(5669 -(710 + 504)))) then v87[v89[2]]= not v87[v89[11 -8]];elseif (((2206 + 307)>=(2102 -(421 + 527))) and (v90>31)) then if (((2696 -2150)>(98 -71)) and  not v87[v89[2 + 0]]) then v75=v75 + 1;else v75=v89[314 -(288 + 23)];end else local v184=0;local v185;while true do if (((4302 -(1644 + 302))<((961 + 3101) -(885 + 329))) and (v184==(0 + 0))) then v185=v87[v89[14 -10]];if (((3928 -2525)<(909 + 1386)) and  not v185) then InstrPoint=InstrPoint + 1 + 0;else local v234=0 + 0;local v235;while true do if ((v234==(1889 -(936 + 953))) or ((1300 + 3488)<2125)) then v235=0;while true do if ((v235==0) or ((68 + 26)>(1682 -(21 + 534)))) then v87[v89[1283 -(1037 + (709 -465))]]=v185;InstrPoint=v89[935 -(457 + 475)];break;end end break;end end end break;end end end elseif ((573==(1216 -(495 + 148))) and (v90<=(18 + 6 + 14))) then if (((2436 -(684 + 454))==(3100 -(574 + 1228))) and (v90<=(141 -106))) then if (((622 + 2306)==2928) and (v90<=(33 + 0))) then local v133=0;local v134;local v135;local v136;local v137;local v138;local v139;while true do if ((v133==((7 -3) -2)) or ((471 + 3080)<=(10037 -6830))) then v138=nil;v139=nil;v133=(1634 -(326 + 1306)) + 1;end if ((v133==(6 -3)) or ((4062 -(104 + 14))<(2952 -(219 + 309)))) then while true do if ((v134==0) or ((3084 -(522 + 1189 + 61))<(846 + 85))) then v135=0 + 0;v136=nil;v134=1 + 0;end if (((5526 -(578 + 20))>(4949 -1818)) and (v134==(476 -(56 + 418)))) then v139=nil;while true do if (((2118 -(427 + 457))<=3525) and (v135==(5 -3))) then for v272=v136,v76 do local v273=0 + 0;while true do if ((v273==0) or (((6540 -(458 + 225)) -4495)>=(1972 + 1084 + 1666))) then v139=v139 + 1 + 0;v87[v272]=v137[v139];break;end end end break;end if ((((2248 -1248) + 3618)>(154 + 500)) and (1==v135)) then local v257=0 + 0;local v258;while true do if ((v257==(0 -0)) or (2462<(3180 -((1465 -765) + 1134)))) then v258=0;while true do if ((((558 -(163 + 395)) + 0)==v258) or (((3162 -914) + 1550)<=2942)) then local v317=0 + 0 + 0;while true do if ((v317==(1274 -(972 + 301))) or (3718<3354)) then v258=2 -(1 + 0);break;end if (((5174 -((639 -(7 + 371)) + 286))>=(5034 -(130 + 329))) and (v317==(0 -0))) then v76=(v138 + v136) -(1 -0);v139=0 + (0 -0);v317=1 + 0;end end end if ((1389<(1749 + 977)) and (v258==1)) then v135=2 + 0;break;end end break;end end end if ((v135==(1534 -(959 + 575))) or ((3708 + 580)<=(11785 -8214))) then local v259=0 -0;local v260;while true do if ((v259==(1523 -(1218 + 305))) or (1141>=(6337 -4683))) then v260=245 -(121 + 124);while true do if ((v260==(0 -0)) or ((2174 + 733)<(3425 -(1219 + 69)))) then local v318=0;while true do if ((v318==(0 + 0)) or (((3523 + 1529) -(14 + 1364))<=((877 -249) -(468 + (59 -27))))) then v136=v89[2];v137,v138=v84(v87[v136](v87[v136 + ((1 + 102) -(65 + 31 + 6))]));v318=1 + 0;end if (((8299 -4238)==(4586 -(449 + 76))) and (v318==(1 + 0))) then v260=2 -1;break;end end end if (((13014 -8589)==(6057 -(1282 + 350))) and (v260==(2 -(1 + 0)))) then v135=1 -0;break;end end break;end end end end break;end if ((v134==(1 + 0)) or ((208 + 745)>=(7022 -3772))) then local v229=0 -0;while true do if (((10775 -7744)>24) and (v229==(4 -3))) then v134=5 -3;break;end if ((v229==0) or ((7723 -3726)==(2750 -(554 + 362)))) then v137=nil;v138=nil;v229=1947 -(590 + 1356);end end end end break;end if (((1222 -867)<(918 + 1365)) and (v133==(0 + 0))) then v134=912 -((806 -(70 + 136)) + 312);v135=nil;v133=2 -1;end if ((v133==(1642 -(229 + 1412))) or ((3114 -(556 + 765))>=(4349 -2277))) then v136=nil;v137=nil;v133=1 + 1 + 0;end end elseif (((1807 + 2390)<((22396 -14139) -3309)) and (v90>34)) then local v186=(0 -0) + 0;local v187;local v188;local v189;local v190;while true do if ((v186==(766 -(326 + 438))) or (((1936 + 389) -915)==(562 + 320 + 3120))) then while true do if ((v187==(26 -(9 + 17))) or ((1674 -(248 + 644))>=(4551 -((278 -133) + 308)))) then local v242=0 -0;local v243;while true do if (((4775 -(746 + 938))>=(2945 -(630 + 540))) and (v242==0)) then v243=0;while true do if ((713<(190 + 767)) and (v243==(0 -0))) then local v308=0 + 0;while true do if ((v308==(0 + 0)) or (1792>=3168)) then v188=v82[v89[(895 -(154 + 740)) + 2]];v189=nil;v308=1801 -(738 + 1062);end if ((v308==(4 -3)) or ((3190 -(422 + 749))>(6608 -(56 + 1556)))) then v243=1 + 0;break;end end end if ((v243==(1 -0)) or (((1433 + 3150) -(11260 -8027))<(224 + 810))) then v187=2 -1;break;end end break;end end end if ((v187==(1 + 1)) or (859<(404 -(24 + 40)))) then for v261=1 + 0,v89[1 + 3] do local v262=606 -(307 + 299);local v263;local v264;while true do if ((v262==((856 -(39 + 9)) -(519 + 289))) or (4799<=(7456 -3790))) then local v286=0;while true do if (((2111 + 754)<(4998 -(94 + 79))) and ((0 + 0)==v286)) then v263=1945 -(1603 + 342);v264=nil;v286=1477 -(940 + 536);end if (((1 + 0 + 0)==v286) or ((3785 -((1927 -(401 + 1386)) + 761))==(2137 -1040))) then v262=1;break;end end end if ((v262==(781 -(309 + 471))) or (2244>(7221 -3574))) then while true do if ((v263==(1 + 0)) or ((2217 + 2160)==(2124 + 731))) then if ((v264[3 -2]==(59 -39)) or ((1217 + 1387)>=(3760 -(829 + 150)))) then v190[v261-(4 -3)]={v87,v264[3]};else v190[v261-(1 + (1050 -(192 + 858)))]={v36,v264[3]};end v86[ #v86 + 1]=v190;break;end if ((v263==0) or (4943<(1391 -965))) then local v320=0 -0;while true do if ((v320==1) or (((4115 -(106 + 1570)) + 2264)<=534)) then v263=1;break;end if (((3308 + 42)>=(2667 -(49 + (1599 -1257)))) and (v320==(0 + (0 -0)))) then local v329=0 + 0;while true do if (((1 + 0)==v329) or ((5018 -(582 + 1228))==(276 + 3263))) then v320=(747 -(208 + 536)) -2;break;end if ((0==v329) or ((6739 -4773)>(4585 -(1826 + 141)))) then v75=v75 + 1 + 0;v264=v80[v75];v329=2 -1;end end end end end end break;end end end v87[v89[2]]=v29(v188,v189,v37);break;end if ((v187==(1 + (1561 -(936 + 625)))) or ((5936 -1515)==(4 + 36))) then local v245=0 + 0;while true do if (((608 -(237 + 370))==v245) or ((1270 -(864 + 141))>=(521 + 844))) then v187=2 + 0;break;end if ((v245==(0 + 0)) or (3710>((12954 -10022) + 1528))) then v190={};v189=v10({},{__index=function(v287,v288)local v301=0 + 0;local v302;local v303;local v304;while true do if ((v301==((1 + 0) -0)) or ((2021 -(103 + 502))<=(891 -309))) then v304=nil;while true do if ((v302==(245 -(87 + 158))) or ((983 + 375)>=(6297 -(1347 + 529)))) then v303=0;v304=nil;v302=1 + 0;end if ((((7178 -(713 + 1082)) -1678)>=(4399 -(478 + 256))) and (((2 -1) + 0)==v302)) then while true do if (((2836 -(90 + 646))<3749) and (((0 -0) -0)==v303)) then local v341=0 -0;local v342;while true do if ((v341==0) or ((12722 -8929)<=(1057 -(708 + 31)))) then v342=0 + 0;while true do if (((2241 -(1004 + 43))>=1109) and (v342==(524 -(168 + 356)))) then local v348=0 -(0 + 0);while true do if (((4130 -((978 -719) + 1396))>=(3659 -1434)) and (v348==(1881 -(373 + 1508)))) then v304=v190[v288];return v304[1 + (0 -0)][v304[(1787 -(914 + 871)) + (0 -0)]];end end end end break;end end end end break;end end break;end if ((v301==0) or (((21060 -15182) -2772)==(1597 + 3186))) then v302=(0 -0) + 0;v303=nil;v301=2 -1;end end end,__newindex=function(v289,v290,v291)local v305=0;local v306;while true do if ((v305==(0 + 0)) or ((8251 -3947)==2464)) then v306=v190[v290];v306[(1 -0) + 0][v306[1 + 1]]=v291;break;end end end});v245=1252 -(506 + 745);end end end end break;end if ((v186==1) or ((1856 + (4507 -2685))==299)) then v189=nil;v190=nil;v186=6 -4;end if ((v186==(714 -(42 + 672))) or ((6342 -3292)<=(2878 -(537 + 66)))) then local v215=0;while true do if ((((6676 -4959) -(2896 -1586))<=(5187 -3399)) and (v215==(0 + 0))) then v187=0 -0;v188=nil;v215=1145 -(920 + 224);end if ((v215==(3 -2)) or ((14420 -11416)>(1839 + 1629))) then v186=4 -3;break;end end end end else do return v87[v89[2]];end end elseif ((v90<=(66 -30)) or (((11634 -6953) -(1691 + 198))>(5885 -(1430 + 306)))) then v75=v89[(93 + 225) -(170 + 145)];elseif (((2001 + 2835)>1559) and (v90>37)) then v87[v89[618 -(240 + 376)]][v89[2 + 1 + 0]]=v89[5 -1];else v87[v89[1837 -(1255 + 580)]]=v89[3 + 0];end elseif ((v90<=41) or (2149>=(22140 -17291))) then if ((v90<=(9 + 30)) or (4922<2906)) then if ((v87[v89[1200 -(403 + 795)]]~=v89[1369 -(422 + 943)]) or ((255 + 792)>(4234 -(1413 + 416)))) then v75=v75 + 1 + 0;else v75=v89[3];end elseif ((v90>(1549 -(946 + 563))) or ((6979 -4838)<1971)) then do return;end else v36[v89[102 -(31 + 68)]]=v87[v89[2]];end elseif (((4085 -(112 + 42 + 169))<=(5513 -(556 + 208))) and (v90<=(1074 -(758 + 274)))) then v87[v89[1180 -(200 + 3 + 975)]][v89[24 -(19 + 2)]]=v87[v89[1749 -(721 + 1024)]];elseif ((v90==(76 -33)) or ((2235 + 223)<284)) then v87[v89[6 -4]]=v36[v89[1031 -(489 + 230 + 309)]];else v87[v89[1 + 1]]=v87[v89[9 -6]][v87[v89[(470 -(384 + 76)) -6]]];end v75=v75 + 1 + 0;break;end end end end A,B=v27(v11(v79));if  not A[1] then local v91=v35[4][v75] or "?";error("Script error at ["   .. v91   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end end end return v29(v28(),{},v17)();end v0=4;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end
